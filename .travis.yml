language: python
python:
  - "3.5"

env:
  global:
      - DEPLOY_HOST=rpm.palette-software.com
      - DEPLOY_PATH=/var/palette-rpm-repo
      - DEPLOY_USER=palette-rpm

      # travis encrypt DEPLOY_PASS=...
      - secure: "IhmMGnJTHRxK9hnkaOcxowR9QJ+vbxsEIsPrvDxdSPv4qz2gntRW6Ea0VoAypqf2VHVaizXOkHObAg3SUaSzSjHAdb4N1o6cmCPhBkdgZyJs95mO6kcY8MHb/CWppeItUSEi3+GMtEHr4ZQWtXRvBTwXFuvDdD/bVp0MXTFKLbQkny5I2ZuPQM/ALYcYsZlTCr4XCkxjYvZRgw3TYVa0iwaeZ6JWFg2VKVCdQP6BvDCkrV7xf3vNRG2pGiI2rphQDc8m2fs2/HsHTbEobzzpiCAhkGAwjuH93CAH4t05vLWA2RnsbJRUcZAiiafnNvwSb/+qkYeEHM3KsZ/ai0EGgOwsUfyMXJOJbwQsNF1TgPlqbX3Q2qFgh1b3P8H21VVxpBRzmC8U5s1Tspqp2GmeYZmvqyDzx7ZxxA1t8vNEI5V0Rv24DoySh34FMoCUzMRDv6Vu+aB67aPN1yKdgFzbzY3pTWN05beM5xjcL9mHR7F5Ap3r72kMkazQjVHz5bsUjQdkDev/3n8X0/VjePff+6Gyq3Amlc0RGWVVqDx3AztXqB8q4AU0L14uE/tSTJxZUaIzyfbViKGmQzVBAanH8LuuCdzteqt2Unw1BDXg4JBfuKGLwFNiyCWk3BMSLYmunSubHEpgeQX8NrS65U9ydMmSvHXuTNf0/mjarwtgIMA="

# install the RPM package
addons:
  apt:
    packages:
      - rpm
      # To deploy the rpms, we need to ssh into places, and we dont want to store keys for now
      - sshpass

# Put a proper version string into the version file
before_script:
  - export BUILD_TAG="$TRAVIS_BRANCH-$(date -u "+%Y-%m-%d").$TRAVIS_BUILD_NUMBER"
  - echo "==== Setting ${BUILD_TAG} as version ===="

script:
  - export VERSION_NUMBER="$(sed -n 's/Version. \([0-9]*\.[0-9]*\.[0-9]*$\)/\1/p' < gp-import-config.yml)"
  - export VERSION=$VERSION_NUMBER.$TRAVIS_BUILD_NUMBER

  # Run tests
  - python -m pytest test/

  # Prepare for rpm-build
  - pushd rpm-build
  - mkdir -p _build

  # Create directories
  - mkdir -p opt/insight-gp-import
  - mkdir -p var/log/insight-gp-import

  # Copy the package contents
  - cp -v ../*.py opt/insight-gp-import
  - cp -v ../*.sh opt/insight-gp-import
  - cp -v ../requirements.txt opt/insight-gp-import

  - echo "BUILDING VERSION:v$VERSION"

  # # Freeze the dependencies of requirements
  - export SPEC_FILE=insight-gp-import.spec
  # - ./freeze-requirement.sh palette-greenplum-installer x86_64 ${SPEC_FILE}
  # # Show the contents of the modified (frozen versions) spec file
  # - cat ${SPEC_FILE}

  # build the rpm
  - rpmbuild -bb --buildroot $(pwd) --define "version $VERSION" --define "buildrelease $TRAVIS_BUILD_NUMBER" --define "_rpmdir $(pwd)/_build" ${SPEC_FILE}
  - popd

deploy:
  provider: script
  script: "./deploy.sh"
  skip_cleanup: true
  on:
    branch: master

notifications:
  email: false
