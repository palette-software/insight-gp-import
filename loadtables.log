2016-09-12 09:28:03,718 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 09:28:03,718 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 09:30:23,300 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 09:30:23,300 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 09:31:37,198 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 09:31:37,198 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 09:32:06,556 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 09:32:06,556 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 09:33:54,891 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 09:33:55,063 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 09:34:44,140 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 09:34:44,140 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 09:35:25,329 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 09:35:25,329 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 09:39:39,088 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 09:39:39,088 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 11:57:54,618 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 11:57:54,618 - FATAL - loadtables - Unhandled exception occurred: read_metadata() missing 1 required positional argument: 'filename'
2016-09-12 11:58:10,610 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 11:58:10,610 - FATAL - loadtables - Unhandled exception occurred: 'list' object has no attribute 'apppend'
2016-09-12 11:58:49,739 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 11:58:49,740 - FATAL - loadtables - Unhandled exception occurred: 'list' object has no attribute 'apppend'
2016-09-12 11:58:57,123 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 11:58:57,123 - FATAL - loadtables - Unhandled exception occurred: 'list' object has no attribute 'apppend'
2016-09-12 11:59:18,634 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 11:59:18,634 - FATAL - loadtables - Unhandled exception occurred: 'list' object has no attribute 'apppend'
2016-09-12 11:59:34,610 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 11:59:34,610 - FATAL - loadtables - Unhandled exception occurred: 'list' object has no attribute 'apppend'
2016-09-12 11:59:46,673 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 11:59:46,673 - FATAL - loadtables - Unhandled exception occurred: 'list' object has no attribute 'apppend'
2016-09-12 12:00:07,135 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 12:00:07,136 - FATAL - loadtables - Unhandled exception occurred: 'list' object has no attribute 'apppend'
2016-09-12 12:00:21,008 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 12:00:21,008 - FATAL - loadtables - Unhandled exception occurred: 'list' object has no attribute 'apppend'
2016-09-12 12:00:38,920 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 12:00:38,920 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 12:02:03,136 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 12:02:03,136 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 12:02:21,340 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 12:02:21,340 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 12:02:36,193 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 12:02:36,193 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 12:14:32,029 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 12:14:32,031 - FATAL - loadtables - Unhandled exception occurred: a bytes-like object is required, not 'str'
2016-09-12 12:15:04,829 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 12:15:04,852 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 12:17:34,469 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 12:17:34,505 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 12:17:49,032 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 12:17:49,066 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 12:18:13,547 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 12:18:13,552 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 12:18:20,093 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 12:18:20,105 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 12:18:30,774 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 12:18:30,787 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 12:25:23,708 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 12:25:23,712 - FATAL - loadtables - Unhandled exception occurred: name 'get_create_table_query' is not defined
2016-09-12 12:26:49,038 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 12:26:49,042 - FATAL - loadtables - Unhandled exception occurred: name 'get_create_table_query' is not defined
2016-09-12 12:28:05,607 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 12:28:05,611 - FATAL - loadtables - Unhandled exception occurred: 'str' object has no attribute 'append'
2016-09-12 12:28:32,277 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 12:28:32,282 - FATAL - loadtables - Unhandled exception occurred: 'str' object has no attribute 'append'
2016-09-12 12:30:31,169 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 12:30:31,173 - FATAL - loadtables - Unhandled exception occurred: 'str' object has no attribute 'append'
2016-09-12 12:32:12,192 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 12:32:12,197 - FATAL - loadtables - Unhandled exception occurred: 'list' object has no attribute 'name'
2016-09-12 12:33:41,976 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 12:33:41,981 - FATAL - loadtables - Unhandled exception occurred: 'list' object has no attribute 'name'
2016-09-12 12:34:20,229 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 12:34:20,249 - FATAL - loadtables - Unhandled exception occurred: 'list' object has no attribute 'name'
2016-09-12 13:05:07,671 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:05:07,676 - FATAL - loadtables - Unhandled exception occurred: 'dict' object has no attribute 'name'
2016-09-12 13:05:28,314 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:05:28,320 - FATAL - loadtables - Unhandled exception occurred: list indices must be integers or slices, not str
2016-09-12 13:05:43,641 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:05:43,646 - FATAL - loadtables - Unhandled exception occurred: 'dict' object has no attribute 'name'
2016-09-12 13:05:52,838 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:05:52,843 - FATAL - loadtables - Unhandled exception occurred: 'dict' object has no attribute 'name'
2016-09-12 13:06:09,275 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:06:09,280 - FATAL - loadtables - Unhandled exception occurred: 'dict' object has no attribute 'name'
2016-09-12 13:07:11,424 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:07:11,429 - FATAL - loadtables - Unhandled exception occurred: 'dict' object has no attribute 'name'
2016-09-12 13:11:17,712 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:11:17,716 - FATAL - loadtables - Unhandled exception occurred: name 'parsed_line_to_dict' is not defined
2016-09-12 13:11:36,450 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:11:36,455 - FATAL - loadtables - Unhandled exception occurred: name 'ColumnMetadata' is not defined
2016-09-12 13:11:52,844 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:11:52,849 - FATAL - loadtables - Unhandled exception occurred: name 'ColumnMetadata' is not defined
2016-09-12 13:12:13,381 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:12:13,386 - FATAL - loadtables - Unhandled exception occurred: 'ColumnMetadata' object is not subscriptable
2016-09-12 13:12:40,373 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:12:40,378 - FATAL - loadtables - Unhandled exception occurred: 'ColumnMetadata' object is not subscriptable
2016-09-12 13:12:50,968 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:12:50,973 - FATAL - loadtables - Unhandled exception occurred: 'ColumnMetadata' object is not subscriptable
2016-09-12 13:13:13,837 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:13:13,842 - FATAL - loadtables - Unhandled exception occurred: 'ColumnMetadata' object is not subscriptable
2016-09-12 13:14:20,009 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:14:20,014 - FATAL - loadtables - Unhandled exception occurred: 'ColumnMetadata' object is not subscriptable
2016-09-12 13:22:54,513 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:22:54,518 - FATAL - loadtables - Unhandled exception occurred: 'str' object is not callable
2016-09-12 13:23:29,317 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:23:29,322 - FATAL - loadtables - Unhandled exception occurred: 'ColumnMetadata' object is not subscriptable
2016-09-12 13:25:11,593 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:25:11,599 - FATAL - loadtables - Unhandled exception occurred: local variable 'query' referenced before assignment
2016-09-12 13:27:24,924 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:27:24,924 - FATAL - loadtables - Unhandled exception occurred: local variable 'query' referenced before assignment
2016-09-12 13:27:59,154 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:27:59,169 - FATAL - loadtables - Unhandled exception occurred: name 'logging' is not defined
2016-09-12 13:28:11,730 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:28:11,730 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   ,
  "host_name" text
) ,
  "process" text
) ,
  "ts" timestamp without time zone
) ,
  "pid" bigint
) ,
  "tid" bigint
) ,
  "cpu_time" bigint
) ,
  "poll_cycle_ts" timestamp without time zone
) ,
  "start_ts" timestamp without time zone
) ,
  "thread_count" integer
) ,
  "working_set" bigint
) ,
  "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:28:11,730 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:31:15,161 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:31:15,166 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   , "host_name" text
) , "process" text
) , "ts" timestamp without time zone
) , "pid" bigint
) , "tid" bigint
) , "cpu_time" bigint
) , "poll_cycle_ts" timestamp without time zone
) , "start_ts" timestamp without time zone
) , "thread_count" integer
) , "working_set" bigint
) , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:31:15,166 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:31:58,414 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:31:58,419 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   , "host_name" text
) , "process" text
) , "ts" timestamp without time zone
) , "pid" bigint
) , "tid" bigint
) , "cpu_time" bigint
) , "poll_cycle_ts" timestamp without time zone
) , "start_ts" timestamp without time zone
) , "thread_count" integer
) , "working_set" bigint
) , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:31:58,419 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:32:36,853 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:32:36,858 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   , "host_name" text , "process" text , "ts" timestamp without time zone , "pid" bigint , "tid" bigint , "cpu_time" bigint , "poll_cycle_ts" timestamp without time zone , "start_ts" timestamp without time zone , "thread_count" integer , "working_set" bigint , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:32:36,858 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:33:06,581 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:33:06,586 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   , "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean

) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:33:06,586 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:33:21,929 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:33:21,934 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   , "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:33:21,935 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:33:31,086 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:33:31,091 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   ,"host_name" text
 ,"process" text
 ,"ts" timestamp without time zone
 ,"pid" bigint
 ,"tid" bigint
 ,"cpu_time" bigint
 ,"poll_cycle_ts" timestamp without time zone
 ,"start_ts" timestamp without time zone
 ,"thread_count" integer
 ,"working_set" bigint
 ,"thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:33:31,092 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:33:54,432 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:33:54,438 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
 , "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:33:54,438 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:33:57,272 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:33:57,278 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
 , "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:33:57,278 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:34:43,002 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:34:43,015 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
 , "columnname" format_type
 , "domain_id" integer
 , "auth_user_id" character varying(255)
 , "module" text
 , "mru_list_id" integer
 , "useable_id" integer
 , "backgrounder_id" character varying(255)
 , "id" integer
 , "created_at" timestamp without time zone
 , "completed_at" timestamp without time zone
 , "finish_code" integer
 , "job_type" character varying(255)
 , "progress" integer
 , "args" text
 , "notes" text
 , "started_at" timestamp without time zone
 , "job_name" character varying(255)
 , "priority" integer
 , "title" character varying(255)
 , "processed_on_worker" character varying(255)
 , "subtitle" character varying(255)
 , "language" character varying(255)
 , "site_id" integer
 , "locale" character varying(255)
 , "id" integer
 , "title" text
 , "comment" text
 , "commentable_type" character varying(15)
 , "created_at" timestamp without time zone
 , "drawing" text
 , "commentable_id" integer
 , "user_id" integer
 , "site_id" integer
 , "name" character varying(255)
 , "repository_url" character varying(255)
 , "id" integer
 , "size" integer
 , "view_name" character varying(255)
 , "sheet_id" character varying(255)
 , "workbook_url" text
 , "workbook_name" character varying(255)
 , "email" character varying(255)
 , "user_name" character varying(255)
 , "site_id" integer
 , "id" integer
 , "name" character varying(255)
 , "datasource_url" text
 , "owner_id" integer
 , "owner_name" character varying(255)
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "size" bigint
 , "project_id" integer
 , "project_name" character varying(255)
 , "server" text
 , "dbclass" character varying(128)
 , "port" integer
 , "username" character varying(128)
 , "dbname" character varying(255)
 , "owner_type" character varying(255)
 , "system_user_id" integer
 , "site_id" integer
 , "domain_id" integer
 , "domain_name" character varying(255)
 , "nviews" bigint
 , "last_access_time" timestamp without time zone
 , "datasource_id" integer
 , "site_id" integer
 , "id" integer
 , "name" character varying(255)
 , "site_name" character varying(255)
 , "domain_name" character varying(255)
 , "domain_short_name" character varying(80)
 , "domain_family" character varying(255)
 , "controller" character varying(255)
 , "action" character varying(255)
 , "http_referer" character varying(255)
 , "http_user_agent" character varying(255)
 , "http_request_uri" text
 , "remote_ip" character varying(255)
 , "created_at" timestamp without time zone
 , "session_id" character varying(255)
 , "completed_at" timestamp without time zone
 , "port" integer
 , "user_id" integer
 , "worker" character varying(255)
 , "vizql_session" text
 , "user_ip" character varying(255)
 , "currentsheet" character varying(255)
 , "site_id" integer
 , "id" integer
 , "name" character varying(255)
 , "created_at" timestamp without time zone
 , "owner_id" integer
 , "owner_name" character varying(255)
 , "system_user_id" integer
 , "site_id" integer
 , "id" integer
 , "name" character varying(255)
 , "active" boolean
 , "priority" integer
 , "schedule_type" integer
 , "day_of_week_mask" integer
 , "day_of_month_mask" integer
 , "start_at_minute" integer
 , "minute_interval" integer
 , "end_at_minute" integer
 , "end_schedule_at" timestamp without time zone
 , "run_next_at" timestamp without time zone
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "hidden" boolean
 , "serial_collection_id" integer
 , "lock_version" integer
 , "scheduled_action" integer
 , "scheduled_action_type" text
 , "session_id" character varying(255)
 , "updated_at" timestamp without time zone
 , "user_id" integer
 , "user_name" character varying(255)
 , "system_user_id" integer
 , "site_id" integer
 , "id" integer
 , "name" character varying(255)
 , "url_namespace" character varying(255)
 , "status" character varying(255)
 , "id" integer
 , "subject" character varying(256)
 , "content_type" text
 , "view_url" text
 , "workbook_url" text
 , "customized_view_id" integer
 , "last_sent" timestamp without time zone
 , "user_id" integer
 , "user_name" character varying(255)
 , "site_id" integer
 , "site_name" character varying(255)
 , "schedule_name" character varying(255)
 , "schedule_active" boolean
 , "schedule_run_next_at" timestamp without time zone
 , "schedule_priority" integer
 , "id" integer
 , "name" character varying(255)
 , "email" character varying(255)
 , "friendly_name" character varying(255)
 , "custom_display_name" boolean
 , "state" character varying(255)
 , "admin_level" integer
 , "domain_name" character varying(255)
 , "domain_short_name" character varying(80)
 , "domain_family" character varying(255)
 , "tag_id" integer
 , "tag_name" character varying(255)
 , "object_type" character varying(255)
 , "taggable_id" integer
 , "object_id" integer
 , "object_name" character varying(255)
 , "user_id" integer
 , "user_name" character varying(255)
 , "system_user_id" integer
 , "site_id" integer
 , "id" integer
 , "name" character varying(255)
 , "login_at" timestamp without time zone
 , "friendly_name" character varying(255)
 , "licensing_role_id" integer
 , "licensing_role_name" character varying(255)
 , "domain_id" integer
 , "system_user_id" integer
 , "domain_name" character varying(255)
 , "domain_short_name" character varying(80)
 , "site_id" integer
 , "id" integer
 , "name" character varying(255)
 , "view_url" text
 , "created_at" timestamp without time zone
 , "owner_id" integer
 , "owner_name" character varying(255)
 , "workbook_id" integer
 , "index" integer
 , "title" text
 , "caption" text
 , "site_id" integer
 , "users_id" integer
 , "system_users_name" character varying(255)
 , "users_login_at" timestamp without time zone
 , "system_users_friendly_name" character varying(255)
 , "views_id" integer
 , "system_users_id" integer
 , "views_name" character varying(255)
 , "views_url" text
 , "views_workbook_id" integer
 , "views_created_at" timestamp without time zone
 , "views_owner_id" integer
 , "views_index" integer
 , "views_title" text
 , "views_caption" text
 , "device_type" text
 , "nviews" integer
 , "last_view_time" timestamp without time zone
 , "site_id" integer
 , "id" integer
 , "name" character varying(255)
 , "workbook_url" text
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "owner_id" integer
 , "project_id" integer
 , "size" bigint
 , "view_count" integer
 , "owner_name" character varying(255)
 , "project_name" character varying(255)
 , "system_user_id" integer
 , "site_id" integer
 , "domain_id" integer
 , "domain_name" character varying(255)
 , "id" integer
 , "asset_key_id" integer
 , "marker_name" character varying(255)
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "marker_name" character varying(255)
 , "id" integer
 , "id" integer
 , "algorithm_name" character varying(255)
 , "salt" character varying(255)
 , "test_string" character varying(255)
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "id" integer
 , "id" integer
 , "asset_list_id" integer
 , "useable_type" character varying(255)
 , "useable_id" integer
 , "position" integer
 , "usedobj_name" character varying(255)
 , "usedobj_url" character varying(255)
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "name" character varying(255)
 , "owner_id" integer
 , "site_id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "job_type" character varying(255)
 , "success" boolean
 , "worker" character varying(255)
 , "user_id" integer
 , "site_id" integer
 , "notes" text
 , "progress" integer
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "completed_at" timestamp without time zone
 , "detailed_status" text
 , "luid" uuid
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "site_id" integer
 , "luid" uuid
 , "id" integer
 , "id" integer
 , "guid" character varying(40)
 , "user_id" integer
 , "source_type" character varying(10)
 , "source_id" integer
 , "save_data_repository_id" bigint
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "job_type" character varying(255)
 , "progress" integer
 , "args" text
 , "notes" text
 , "updated_at" timestamp without time zone
 , "created_at" timestamp without time zone
 , "completed_at" timestamp without time zone
 , "started_at" timestamp without time zone
 , "job_name" character varying(255)
 , "finish_code" integer
 , "priority" integer
 , "title" character varying(255)
 , "created_on_worker" character varying(255)
 , "processed_on_worker" character varying(255)
 , "link" text
 , "lock_version" integer
 , "backgrounder_id" character varying(255)
 , "serial_collection_id" integer
 , "site_id" integer
 , "subtitle" character varying(255)
 , "language" character varying(255)
 , "locale" character varying(255)
 , "correlation_id" integer
 , "attempts_remaining" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "txt" text
 , "updated_at" timestamp without time zone
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "name" character varying(80)
 , "display_name" character varying(255)
 , "display_order" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "capability_id" integer
 , "role_id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "title" text
 , "comment" text
 , "created_at" timestamp without time zone
 , "commentable_id" integer
 , "commentable_type" character varying(15)
 , "user_id" integer
 , "drawing" text
 , "updated_at" timestamp without time zone
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "system_user_id" integer
 , "client_id" character varying(255)
 , "machine_ip" character varying(255)
 , "machine_cores" integer
 , "allocated_cores" integer
 , "update_ts" timestamp without time zone
 , "machine_ip" character varying(255)
 , "id" integer
 , "name" character varying(255)
 , "description" text
 , "view_id" integer
 , "repository_url" character varying(255)
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "creator_id" integer
 , "public" boolean
 , "size" integer
 , "site_id" integer
 , "repository_data_id" bigint
 , "repository_thumbnail_data_id" bigint
 , "url_id" character varying(255)
 , "start_view_id" integer
 , "luid" uuid
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "site_id" integer
 , "luid" uuid
 , "id" integer
 , "id" integer
 , "server" text
 , "dbclass" character varying(128)
 , "port" integer
 , "username" character varying(128)
 , "password" boolean
 , "name" character varying(255)
 , "dbname" character varying(255)
 , "tablename" character varying(255)
 , "owner_type" character varying(255)
 , "owner_id" integer
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "caption" character varying(255)
 , "site_id" integer
 , "keychain" text
 , "luid" uuid
 , "has_extract" boolean
 , "datasource_id" integer
 , "db_subclass" character varying(255)
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "site_id" integer
 , "luid" uuid
 , "id" integer
 , "machine_ip" character varying(255)
 , "updated_at" timestamp without time zone
 , "port" character varying(255)
 , "pipe_name" character varying(255)
 , "state" integer
 , "datasource_id" integer
 , "id" integer
 , "datasource_id" integer
 , "day_index" integer
 , "month_index" integer
 , "year_index" integer
 , "view_count" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "refresh_mode" character varying
 , "remote_agent_id" integer
 , "schedules" json
 , "last_refresh_error" character varying
 , "last_refresh_error_time" timestamp without time zone
 , "last_refresh_error_client_data" character varying
 , "remote_agent_reservation_id" character varying
 , "id" integer
 , "remote_agent_reservation_id" character varying
 , "id" integer
 , "site_id" integer
 , "datasource_id" integer
 , "publisher_id" integer
 , "version_number" integer
 , "published_at" timestamp without time zone
 , "size" bigint
 , "content_key" character varying(50)
 , "datasource_id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "datasource_id" integer
 , "version_number" integer
 , "id" integer
 , "name" character varying(255)
 , "repository_url" text
 , "owner_id" integer
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "project_id" integer
 , "size" bigint
 , "lock_version" integer
 , "state" character varying(32)
 , "db_class" text
 , "db_name" text
 , "table_name" text
 , "site_id" integer
 , "revision" character varying(255)
 , "repository_data_id" bigint
 , "repository_extract_data_id" bigint
 , "embedded" text
 , "incrementable_extracts" boolean
 , "refreshable_extracts" boolean
 , "data_engine_extracts" boolean
 , "extracts_refreshed_at" timestamp without time zone
 , "first_published_at" timestamp without time zone
 , "connectable" boolean
 , "is_hierarchical" boolean
 , "extracts_incremented_at" timestamp without time zone
 , "luid" uuid
 , "asset_key_id" integer
 , "document_version" character varying(255)
 , "description" text
 , "content_version" integer
 , "parent_workbook_id" integer
 , "hidden_name" character varying(255)
 , "last_published_at" timestamp without time zone
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "site_id" integer
 , "luid" uuid
 , "id" integer
 , "id" integer
 , "updated_at" timestamp without time zone
 , "base_type" character varying(255)
 , "base_id" integer
 , "uuid" character varying(255)
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "app_version" character varying(80)
 , "email" character varying(80)
 , "expiration_date" date
 , "first_name" character varying(80)
 , "last_name" character varying(80)
 , "computer_user_id" character varying(80)
 , "host_name" character varying(80)
 , "department" character varying(80)
 , "company" character varying(80)
 , "os_version" character varying(80)
 , "os_architecture" character varying(80)
 , "registration_date" timestamp without time zone
 , "last_report_date" timestamp without time zone
 , "maintenance_expiration" date
 , "product_name" character varying(80)
 , "edition" character varying(80)
 , "type" character varying(20)
 , "product_keys" character varying(255)
 , "serial_number" character varying(80)
 , "mac_address" character varying(80)
 , "domain" character varying(80)
 , "unique_machine_number" character varying(255)
 , "action" character varying(20)
 , "action_key" character varying(80)
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "unique_machine_number" character varying(255)
 , "id" integer
 , "name" character varying(255)
 , "short_name" character varying(80)
 , "active" boolean
 , "family" character varying(255)
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "expires_at" timestamp without time zone
 , "id" integer
 , "name" character varying(100)
 , "type" exportable_repository_object_type
 , "exportable_table_id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "name" character varying(100)
 , "exportable_table_id" integer
 , "id" integer
 , "id" integer
 , "name" character varying(100)
 , "primary_key_column_name" character varying(100)
 , "exportable_type_id" integer
 , "custom_sql" text
 , "id" integer
 , "exportable_table_id" integer
 , "column_name" character varying(100)
 , "operation" exportable_tables_columns_transformation_type
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "name" character varying(100)
 , "exportable_type_id" integer
 , "id" integer
 , "id" integer
 , "name" character varying(100)
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "name" character varying(100)
 , "id" integer
 , "id" integer
 , "extract_id" integer
 , "session_guid" character varying(255)
 , "session_type" character varying(255)
 , "created_at" timestamp without time zone
 , "worker_name" character varying(255)
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "workbook_id" integer
 , "descriptor" character varying(255)
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "datasource_id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "upload_id" character varying(255)
 , "owner_id" integer
 , "site_id" integer
 , "file_size" bigint
 , "ip_address" character varying(255)
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "name" character varying(64)
 , "setting_type" character varying(64)
 , "friendly_name" character varying(128)
 , "description" text
 , "value" text
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "sort_num" integer
 , "hidden" boolean
 , "default_value" text
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "group_id" integer
 , "user_id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "name" character varying(255)
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "system" boolean
 , "owner_id" integer
 , "domain_id" integer
 , "site_id" integer
 , "luid" uuid
 , "minimum_site_role" character varying(255)
 , "last_synchronized" timestamp without time zone
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "site_id" integer
 , "luid" uuid
 , "id" integer
 , "grantee_type" character varying(255)
 , "grantee_id" integer
 , "authorizable_id" integer
 , "permission" integer
 , "id" integer
 , "capability_id" integer
 , "name" text
 , "allow" boolean
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "comment_id" integer
 , "comment" text
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "key" text
 , "value" text
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "data_connection_id" integer
 , "server" text
 , "name" text
 , "dbname" text
 , "table_name" text
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "datasource_id" integer
 , "name" text
 , "repository_url" text
 , "size" bigint
 , "revision" text
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "group_id" integer
 , "name" text
 , "domain_name" text
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "licensing_role_id" integer
 , "name" text
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "project_id" integer
 , "name" text
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "schedule_id" integer
 , "name" text
 , "schedule_type" integer
 , "priority" integer
 , "scheduled_action" integer
 , "is_serial" boolean
 , "day_of_week_mask" integer
 , "day_of_month_mask" integer
 , "start_at_minute" integer
 , "minute_interval" integer
 , "end_at_minute" integer
 , "end_schedule_at" timestamp without time zone
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "site_id" integer
 , "name" text
 , "url_namespace" text
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "tag_id" integer
 , "name" text
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "task_id" integer
 , "type" text
 , "priority" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "user_id" integer
 , "name" text
 , "domain_name" text
 , "email" text
 , "system_user_id" integer
 , "system_admin_level" integer
 , "hist_licensing_role_id" integer
 , "site_admin_level" integer
 , "publisher_tristate" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "view_id" integer
 , "name" text
 , "repository_url" text
 , "revision" text
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "workbook_id" integer
 , "name" text
 , "repository_url" text
 , "size" bigint
 , "revision" text
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "worker_id" character varying(255)
 , "resource_type" integer
 , "path" character varying(255)
 , "total_space_bytes" bigint
 , "used_space_bytes" bigint
 , "state" integer
 , "record_timestamp" timestamp without time zone
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "type_id" integer
 , "name" text
 , "action_type" text
 , "type_id" integer
 , "id" integer
 , "historical_event_type_id" integer
 , "worker" text
 , "duration_in_ms" integer
 , "is_failure" boolean
 , "details" text
 , "created_at" timestamp without time zone
 , "hist_actor_user_id" integer
 , "hist_target_user_id" integer
 , "hist_actor_site_id" integer
 , "hist_target_site_id" integer
 , "hist_project_id" integer
 , "hist_workbook_id" integer
 , "hist_view_id" integer
 , "hist_datasource_id" integer
 , "hist_comment_id" integer
 , "hist_tag_id" integer
 , "hist_group_id" integer
 , "hist_licensing_role_id" integer
 , "hist_schedule_id" integer
 , "hist_task_id" integer
 , "hist_data_connection_id" integer
 , "hist_config_id" integer
 , "hist_capability_id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "controller" character varying(255)
 , "action" character varying(255)
 , "http_referer" character varying(255)
 , "http_user_agent" character varying(255)
 , "http_request_uri" text
 , "remote_ip" character varying(255)
 , "created_at" timestamp without time zone
 , "session_id" character varying(255)
 , "completed_at" timestamp without time zone
 , "port" integer
 , "user_id" integer
 , "worker" character varying(255)
 , "status" integer
 , "user_cookie" character varying(255)
 , "user_ip" character varying(255)
 , "vizql_session" text
 , "site_id" integer
 , "currentsheet" character varying(255)
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "repository_url" character varying(255)
 , "view_id" integer
 , "view_id" integer
 , "creator_id" integer
 , "table_name" character varying(100)
 , "column_name" character varying(100)
 , "import_mappable_table_id" integer
 , "id" integer
 , "table_name" character varying(100)
 , "column_name" character varying(100)
 , "discriminator_column_name" character varying(100)
 , "discriminator_column_value" character varying(100)
 , "import_mappable_table_id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "name" character varying(100)
 , "primary_key_column_name" character varying(100)
 , "exportable_type_id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "name" character varying(100)
 , "exportable_type_id" integer
 , "id" integer
 , "id" integer
 , "name" character varying(255)
 , "schedule_type" integer
 , "scheduled_action" integer
 , "scheduled_action_type" character varying(255)
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "user_name" character varying(255)
 , "domain_name" character varying(255)
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "table_name" character varying(100)
 , "column_name" character varying(100)
 , "discriminator_column_name" character varying(100)
 , "discriminator_column_value" character varying(100)
 , "importable_table_id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "table_name" character varying(100)
 , "column_name" character varying(100)
 , "importable_table_id" integer
 , "id" integer
 , "name" character varying(100)
 , "primary_key_column_name" character varying(100)
 , "exportable_type_id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "name" character varying(100)
 , "exportable_type_id" integer
 , "id" integer
 , "completed_at" timestamp without time zone
 , "correlation_id" integer
 , "created_at" timestamp without time zone
 , "progress" integer
 , "site_id" integer
 , "id" integer
 , "name" character varying(80)
 , "capability_id" integer
 , "asset_list_id" integer
 , "capability_id" integer
 , "name" character varying(255)
 , "owner_id" integer
 , "role_id" integer
 , "useable_id" integer
 , "useable_type" character varying(255)
 , "comment_id" integer
 , "commentable_id" integer
 , "commentable_type" character varying(15)
 , "commentable_id" integer
 , "commentable_type" character varying(15)
 , "user_id" integer
 , "updated_at" timestamp without time zone
 , "creator_id" integer
 , "view_id" integer
 , "name" character varying(255)
 , "creator_id" integer
 , "view_id" integer
 , "url_id" character varying(255)
 , "data_connection_id" integer
 , "datasource_id" integer
 , "dbname" character varying(255)
 , "owner_id" integer
 , "owner_type" character varying(255)
 , "machine_ip" character varying(255)
 , "port" character varying(255)
 , "pipe_name" character varying(255)
 , "datasource_id" integer
 , "datasource_id" integer
 , "day_index" integer
 , "month_index" integer
 , "year_index" integer
 , "datasource_id" integer
 , "remote_agent_id" integer
 , "refresh_mode" character varying
 , "lower" text
 , "owner_id" integer
 , "parent_workbook_id" integer
 , "project_id" integer
 , "repository_url" text
 , "site_id" integer
 , "substr" text
 , "updated_at" timestamp without time zone
 , "family" character varying(255)
 , "lower" text
 , "lower" text
 , "name" character varying(255)
 , "created_at" timestamp without time zone
 , "extract_id" integer
 , "session_guid" character varying(255)
 , "substring" text
 , "datasource_id" integer
 , "workbook_id" integer
 , "name" character varying(64)
 , "group_id" integer
 , "group_id" integer
 , "user_id" integer
 , "group_id" integer
 , "user_id" integer
 , "domain_id" integer
 , "lower" text
 , "domain_id" integer
 , "site_id" integer
 , "lower" text
 , "owner_id" integer
 , "historical_event_type_id" integer
 , "created_at" timestamp without time zone
 , "hist_datasource_id" integer
 , "hist_workbook_id" integer
 , "is_failure" boolean
 , "licensing_role_id" integer
 , "name" character varying(255)
 , "language_id" character varying(255)
 , "obj_type" character varying(255)
 , "name" character varying(255)
 , "language_id" character varying(255)
 , "obj_type" character varying(255)
 , "obj_name" character varying(255)
 , "mru_list_id" integer
 , "user_id" integer
 , "name" character varying(255)
 , "owner_id" integer
 , "authorizable_id" integer
 , "authorizable_type" character varying(64)
 , "capability_id" integer
 , "grantee_id" integer
 , "grantee_type" character varying(255)
 , "authorizable_type" character varying(64)
 , "grantee_type" character varying(255)
 , "capability_id" integer
 , "authorizable_id" integer
 , "grantee_id" integer
 , "attempts" integer
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "project_id" integer
 , "template_type" character varying(12)
 , "grantee_id" integer
 , "grantee_type" character varying(12)
 , "capability_id" integer
 , "project_id" integer
 , "controlled_permissions_enabled" boolean
 , "lower" text
 , "site_id" integer
 , "lower" text
 , "owner_id" integer
 , "special" integer
 , "substr" text
 , "updated_at" timestamp without time zone
 , "project_id" integer
 , "project_id" integer
 , "refresh_token_device_id" integer
 , "creator_id" integer
 , "updated_at" timestamp without time zone
 , "schedule_id" integer
 , "session_id" character varying(255)
 , "updated_at" timestamp without time zone
 , "base_view_id" integer
 , "guid" character varying(255)
 , "site_id" integer
 , "site_id" bigint
 , "site_luid" uuid
 , "timestamp" timestamp without time zone
 , "name" character varying(255)
 , "url_namespace" character varying(255)
 , "module" text
 , "system_user_id" integer
 , "auth_user_id" character varying(255)
 , "domain_id" integer
 , "email" character varying(255)
 , "lower" text
 , "domain_id" integer
 , "lower" text
 , "lower" text
 , "domain_id" integer
 , "name" character varying(255)
 , "tag_id" integer
 , "taggable_id" integer
 , "taggable_type" character varying(255)
 , "user_id" integer
 , "taggable_id" integer
 , "taggable_type" character varying(255)
 , "tag_id" integer
 , "lower" text
 , "task_id" integer
 , "user_id" integer
 , "view_id" integer
 , "user_id" integer
 , "system_user_id" integer
 , "licensing_role_id" integer
 , "site_id" integer
 , "system_user_id" integer
 , "updated_at" timestamp without time zone
 , "view_id" integer
 , "view_id" integer
 , "created_at" timestamp without time zone
 , "datasource_id" integer
 , "lower" text
 , "owner_id" integer
 , "repository_url" text
 , "substr" text
 , "substr" text
 , "workbook_id" integer
 , "user_id" integer
 , "view_id" integer
 , "updated_at" timestamp without time zone
 , "workbook_id" integer
 , "lower" text
 , "owner_id" integer
 , "project_id" integer
 , "repository_url" text
 , "site_id" integer
 , "substr" text
 , "updated_at" timestamp without time zone
 , "workbook_id" integer
 , "id" integer
 , "entry_db_class" character varying(255)
 , "entry_username" character varying(255)
 , "entry_xml" text
 , "user_id" integer
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "asset_key_id" integer
 , "entry_db_subclass" character varying(255)
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "keychain_entry_id" integer
 , "workbook_id" integer
 , "datasource_id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "language_id" character varying(255)
 , "display_name" character varying(255)
 , "display_order" integer
 , "help_link" text
 , "locale_id" character varying(5)
 , "language_id" character varying(255)
 , "id" integer
 , "name" character varying(255)
 , "rank" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "language_id" character varying(255)
 , "obj_name" character varying(255)
 , "obj_type" character varying(255)
 , "name" character varying(255)
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "keychain" text
 , "site_id" integer
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "asset_key_id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "site_id" integer
 , "id" integer
 , "repository_data_id" bigint
 , "created_at" timestamp without time zone
 , "session_id" character varying
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "user_id" integer
 , "width" integer
 , "height" integer
 , "pixel_ratio" real
 , "last_enrolled_at" timestamp without time zone
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "primary_ip" character varying(255)
 , "secondary_ip" character varying(255)
 , "updated_at" timestamp without time zone
 , "primary_port" integer
 , "secondary_port" integer
 , "updated_by" character varying(255)
 , "pk" integer
 , "primary_ip" character varying(255)
 , "secondary_ip" character varying(255)
 , "updated_at" timestamp without time zone
 , "primary_port" integer
 , "secondary_port" integer
 , "updated_by" character varying(255)
 , "pk" integer
 , "id" integer
 , "historical_event_type_id" integer
 , "worker" text
 , "duration_in_ms" integer
 , "details" text
 , "task_id" integer
 , "site_id" integer
 , "data_connection_id" integer
 , "is_failure" boolean
 , "created_at" timestamp without time zone
 , "workbook_id" integer
 , "datasource_id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "mru_list_id" integer
 , "useable_id" integer
 , "useable_type" character varying(64)
 , "position" integer
 , "used_at" timestamp without time zone
 , "usedobj_name" text
 , "usedobj_url" text
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "user_id" integer
 , "list_type" character varying(64)
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "user_id" integer
 , "list_type" character varying(64)
 , "id" integer
 , "name" character varying(255)
 , "owner_id" integer
 , "value" integer
 , "state" character varying(32)
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "authorizable_type" character varying(64)
 , "authorizable_id" integer
 , "grantee_id" integer
 , "grantee_type" character varying(255)
 , "capability_id" integer
 , "permission" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "entry_db_class" character varying(255)
 , "entry_db_subclass" character varying(255)
 , "request_token" text
 , "request_token_secret_encrypted" text
 , "is_used" boolean
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "asset_key_id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "is_used" boolean
 , "id" integer
 , "entry_db_class" character varying(255)
 , "entry_db_subclass" character varying(255)
 , "request_token" text
 , "updated_at" timestamp without time zone
 , "id" integer
 , "lock_version" integer
 , "attempts" integer
 , "entity_type" character varying(25)
 , "operation" character varying(25)
 , "object_id" integer
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "precedence" integer
 , "reason" character varying(64)
 , "id" integer
 , "project_id" integer
 , "template_type" character varying(12)
 , "grantee_id" integer
 , "grantee_type" character varying(12)
 , "capability_id" integer
 , "permission" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "view_option_key_id" integer
 , "id" integer
 , "view_option_right_id" integer
 , "view_option_id" integer
 , "id" bigint
 , "id" integer
 , "view_option_id" integer
 , "id" integer
 , "last_update" timestamp without time zone
 , "id" integer
 , "id" integer
 , "name" character varying(255)
 , "owner_id" integer
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "state" character varying(32)
 , "description" text
 , "site_id" integer
 , "special" integer
 , "luid" uuid
 , "controlled_permissions_enabled" boolean
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "site_id" integer
 , "luid" uuid
 , "id" integer
 , "view_option_right_id" integer
 , "project_id" integer
 , "view_option_key_id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "view_option_id" integer
 , "view_option_key_id" integer
 , "value" character varying(128)
 , "project_id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "device_id" character varying(255)
 , "device_name" character varying(255)
 , "system_user_id" integer
 , "last_used_at" timestamp without time zone
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "system_user_id" integer
 , "id" integer
 , "guid" uuid
 , "client_id" character varying(255)
 , "client_name" character varying(255)
 , "system_user_id" integer
 , "expires_at" timestamp without time zone
 , "last_used_at" timestamp without time zone
 , "issued_at" timestamp without time zone
 , "salt" character varying(255)
 , "hashed_secret" character varying(255)
 , "session_id" character varying(255)
 , "refresh_token_device_id" integer
 , "next_hashed_secret" character varying(255)
 , "next_salt" character varying(255)
 , "guid" uuid
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "session_id" character varying(255)
 , "system_user_id" integer
 , "id" integer
 , "owner_id" integer
 , "site_id" integer
 , "name" character varying(255)
 , "time_zone_id" character varying(255)
 , "schedules_synced_at" timestamp without time zone
 , "device_id" character varying(255)
 , "device_id" character varying(255)
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "site_id" integer
 , "name" character varying(255)
 , "id" bigint
 , "name" text
 , "content" oid
 , "created_at" timestamp without time zone
 , "tracking_id" character varying(50)
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "name" character varying(40)
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "creator_id" integer
 , "displayable" boolean
 , "administrative" boolean
 , "display_order" integer
 , "display_name" character varying(255)
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "name" character varying(255)
 , "active" boolean
 , "priority" integer
 , "schedule_type" integer
 , "day_of_week_mask" integer
 , "day_of_month_mask" integer
 , "start_at_minute" integer
 , "minute_interval" integer
 , "end_at_minute" integer
 , "end_schedule_at" timestamp without time zone
 , "run_next_at" timestamp without time zone
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "hidden" boolean
 , "serial_collection_id" integer
 , "lock_version" integer
 , "scheduled_action" integer
 , "luid" uuid
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "luid" uuid
 , "id" integer
 , "version" character varying(255)
 , "id" integer
 , "description" character varying(255)
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "session_id" character varying(255)
 , "data" text
 , "updated_at" timestamp without time zone
 , "user_id" integer
 , "shared_wg_write" text
 , "shared_vizql_write" text
 , "site_id" integer
 , "created_at" timestamp without time zone
 , "lock_version" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "name" character varying(64)
 , "type" character varying(64)
 , "description" text
 , "friendly_name" character varying(128)
 , "value" text
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "guid" character varying(255)
 , "parent_id" integer
 , "base_view_id" integer
 , "creator_id" integer
 , "other_creator" character varying(255)
 , "big_text_id" integer
 , "disabled" boolean
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "site_id" integer
 , "primary_content_url" character varying(255)
 , "static_image_updated_at" timestamp without time zone
 , "image_generated" boolean
 , "share_method" character varying(64)
 , "accessed_at" timestamp without time zone
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "pixel_ratio" real
 , "width" integer
 , "height" integer
 , "view_id" integer
 , "id" integer
 , "width" integer
 , "height" integer
 , "pixel_ratio" real
 , "view_id" integer
 , "language_id" character varying(10)
 , "locale_id" character varying(10)
 , "generated_at" timestamp without time zone
 , "data_storage_id" bigint
 , "generated_as_user_id" integer
 , "customized_view_id" integer
 , "cropped_height" integer
 , "cropped_width" integer
 , "freshness_verified_at" timestamp without time zone
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "site_id" integer
 , "id" integer
 , "site_id" bigint
 , "width" integer
 , "height" integer
 , "storage_id" character varying(128)
 , "url" text
 , "mime_type" character varying(255)
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "site_luid" uuid
 , "idp_entity_descriptor" text
 , "attribute_mapping" text
 , "sp_certificate" text
 , "sp_private_key" text
 , "is_enabled" boolean
 , "entity_descriptor_validation_result" text
 , "authentication_domain_id" character varying(255)
 , "authentication_type_for_embedded" character varying(128)
 , "allow_embedded_authentication" boolean
 , "site_luid" uuid
 , "id" uuid
 , "timestamp" timestamp without time zone
 , "log_level" character varying(8)
 , "message" text
 , "site_luid" uuid
 , "id" uuid
 , "id" character varying(128)
 , "site_luid" uuid
 , "last_accessed_at" timestamp without time zone
 , "http_session" bytea
 , "version" bigint
 , "id" character varying(128)
 , "id" uuid
 , "site_luid" uuid
 , "user_name" character varying(255)
 , "auth_user_id" character varying(255)
 , "id" uuid
 , "id" integer
 , "user_id" integer
 , "refresh_failure_notification_enabled" boolean
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "user_id" integer
 , "id" integer
 , "name" character varying(255)
 , "url_namespace" character varying(255)
 , "status" character varying(255)
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "user_quota" integer
 , "content_admin_mode" integer
 , "storage_quota" bigint
 , "metrics_level" smallint
 , "status_reason" character varying(255)
 , "subscriptions_enabled" boolean
 , "custom_subscription_footer" text
 , "custom_subscription_email" text
 , "luid" uuid
 , "query_limit" integer
 , "authoring_disabled" boolean
 , "sheet_image_enabled" boolean
 , "livedb_connections_whitelist_enabled" boolean
 , "refresh_token_setting" integer
 , "version_history_enabled" boolean
 , "notification_enabled" boolean
 , "content_version_limit" integer
 , "subscribe_others_enabled" boolean
 , "lock_version" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "luid" uuid
 , "id" integer
 , "id" integer
 , "module" text
 , "level" integer
 , "value" text
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "subject" character varying(256)
 , "user_id" integer
 , "schedule_id" integer
 , "last_sent" timestamp without time zone
 , "site_id" integer
 , "luid" uuid
 , "creator_id" integer
 , "data_condition_type" character varying(255)
 , "id" integer
 , "subscription_id" integer
 , "customized_view_id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "site_id" integer
 , "luid" uuid
 , "id" integer
 , "id" integer
 , "subscription_id" integer
 , "repository_url" text
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "subscription_id" integer
 , "repository_url" text
 , "site_id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "system_user_id" integer
 , "device_id" character varying(255)
 , "id" integer
 , "name" character varying(255)
 , "email" character varying(255)
 , "hashed_password" character varying(255)
 , "salt" character varying(255)
 , "sys" boolean
 , "keychain" text
 , "domain_id" integer
 , "friendly_name" character varying(255)
 , "custom_display_name" boolean
 , "activation_code" character varying(255)
 , "activated_at" timestamp without time zone
 , "state" character varying(255)
 , "admin_level" integer
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "deleted_at" timestamp without time zone
 , "auth_user_id" character varying(255)
 , "asset_key_id" integer
 , "lock_version" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "name" character varying(255)
 , "revision" integer
 , "nonce" character varying(32)
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "tag_id" integer
 , "taggable_id" integer
 , "taggable_type" character varying(255)
 , "user_id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "name" character varying(255)
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "site_id" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "schedule_id" integer
 , "type" character varying(255)
 , "priority" integer
 , "obj_id" integer
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "site_id" integer
 , "obj_type" character varying(255)
 , "luid" uuid
 , "consecutive_failure_count" integer
 , "active" boolean
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "site_id" integer
 , "luid" uuid
 , "id" integer
 , "ticket" character varying(255)
 , "id" integer
 , "username" character varying(255)
 , "ticket" character varying(255)
 , "client_ip" character varying(255)
 , "created_at" timestamp without time zone
 , "user_id" integer
 , "expires_at" timestamp without time zone
 , "site_id" integer
 , "originating_session_id" character varying(255)
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "asset_list_id" integer
 , "useable_type" character varying(255)
 , "useable_id" integer
 , "user_id" integer
 , "width" integer
 , "height" integer
 , "pixel_ratio" real
 , "product_keys" character varying(255)
 , "unique_machine_number" character varying(255)
 , "action" character varying(20)
 , "entry_db_class" character varying(255)
 , "entry_username" character varying(255)
 , "entry_db_subclass" character varying(255)
 , "user_id" integer
 , "guid" character varying(40)
 , "user_id" integer
 , "source_type" character varying(10)
 , "source_id" integer
 , "keychain_entry_id" integer
 , "workbook_id" integer
 , "datasource_id" integer
 , "name" character varying(255)
 , "version" character varying(255)
 , "system_user_id" integer
 , "id" integer
 , "user_id" integer
 , "view_id" integer
 , "customized_view_id" integer
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "system_user_id" integer
 , "version" integer
 , "prefs" bytea
 , "language_id" character varying(255)
 , "locale_id" character varying(255)
 , "start_page" text
 , "suppress_getting_started_notifications" boolean
 , "display_mode" character varying(255)
 , "local_timezone_offset" integer
 , "local_timezone_name" character varying(255)
 , "lock_version" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "id" integer
 , "login_at" timestamp without time zone
 , "licensing_role_id" integer
 , "nonce" character varying(32)
 , "row_limit" integer
 , "storage_limit" integer
 , "created_at" timestamp without time zone
 , "extracts_required" boolean
 , "updated_at" timestamp without time zone
 , "admin_level" integer
 , "publisher_tristate" integer
 , "raw_data_suppressor_tristate" integer
 , "site_id" integer
 , "system_user_id" integer
 , "system_admin_auto" boolean
 , "luid" uuid
 , "lock_version" integer
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "site_id" integer
 , "luid" uuid
 , "id" integer
 , "email" character varying(255)
 , "login_at" timestamp without time zone
 , "name" character varying(255)
 , "sys" boolean
 , "id" integer
 , "system_user_id" integer
 , "id" integer
 , "view_id" integer
 , "day_index" integer
 , "month_index" integer
 , "year_index" integer
 , "view_count" integer
 , "device_type" text
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "view_option_key_id" integer
 , "name" character varying(64)
 , "value_type" character varying(32)
 , "default_value" character varying(128)
 , "name" character varying(64)
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "name" character varying(255)
 , "repository_url" text
 , "description" text
 , "created_at" timestamp without time zone
 , "locked" boolean
 , "published" boolean
 , "read_count" integer
 , "edit_count" integer
 , "datasource_id" integer
 , "workbook_id" integer
 , "index" integer
 , "updated_at" timestamp without time zone
 , "owner_id" integer
 , "fields" text
 , "title" text
 , "caption" text
 , "sheet_id" character varying(255)
 , "state" character varying(32)
 , "sheettype" character varying(255)
 , "site_id" integer
 , "repository_data_id" bigint
 , "first_published_at" timestamp without time zone
 , "revision" character varying(255)
 , "for_cache_updated_at" timestamp without time zone
 , "luid" uuid
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "site_id" integer
 , "luid" uuid
 , "id" integer
 , "id" integer
 , "user_id" integer
 , "view_id" integer
 , "nviews" integer
 , "time" timestamp without time zone
 , "site_id" integer
 , "device_type" text
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "workbook_id" integer
 , "id" integer
 , "site_id" integer
 , "workbook_id" integer
 , "publisher_id" integer
 , "version_number" integer
 , "published_at" timestamp without time zone
 , "size" bigint
 , "content_key" character varying(50)
 , "publish_metadata" text
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "id" integer
 , "workbook_id" integer
 , "version_number" integer
 , "workbook_id" integer
 , "id" integer
 , "name" character varying(255)
 , "repository_url" text
 , "description" text
 , "created_at" timestamp without time zone
 , "updated_at" timestamp without time zone
 , "owner_id" integer
 , "project_id" integer
 , "view_count" integer
 , "size" bigint
 , "embedded" text
 , "thumb_user" integer
 , "refreshable_extracts" boolean
 , "extracts_refreshed_at" timestamp without time zone
 , "lock_version" integer
 , "state" character varying(32)
 , "version" character varying(255)
 , "checksum" character varying(255)
 , "display_tabs" boolean
 , "data_engine_extracts" boolean
 , "incrementable_extracts" boolean
 , "site_id" integer
 , "revision" character varying(255)
 , "repository_data_id" bigint
 , "repository_extract_data_id" bigint
 , "first_published_at" timestamp without time zone
 , "primary_content_url" character varying(255)
 , "share_description" character varying(255)
 , "show_toolbar" boolean
 , "extracts_incremented_at" timestamp without time zone
 , "default_view_index" integer
 , "luid" uuid
 , "asset_key_id" integer
 , "document_version" character varying(255)
 , "content_version" integer
 , "last_published_at" timestamp without time zone
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "site_id" integer
 , "luid" uuid
 , "id" integer
 , "view_option_id" integer
 , "view_option_key_id" integer
 , "workbook_id" integer
 , "value" character varying(128)
 , "sequence_name" name
 , "last_value" bigint
 , "start_value" bigint
 , "increment_by" bigint
 , "max_value" bigint
 , "min_value" bigint
 , "cache_value" bigint
 , "log_cnt" bigint
 , "is_cycled" boolean
 , "is_called" boolean
 , "filename" text
 , "host_name" text
 , "line" text
 , "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
 , "timestamp" timestamp without time zone
 , "machine" text
 , "category" text
 , "instance" text
 , "name" text
 , "value" double precision
 , "filename" text
 , "host_name" text
 , "ts" timestamp without time zone
 , "pid" integer
 , "tid" integer
 , "sev" text
 , "req" text
 , "sess" text
 , "site" text
 , "user" text
 , "k" text
 , "v" text
 , "elapsed_ms" integer
 , "start_ts" timestamp without time zone
 , "filename" text
 , "host_name" text
 , "ts" timestamp without time zone
 , "pid" integer
 , "tid" integer
 , "sev" text
 , "req" text
 , "sess" text
 , "site" text
 , "user" text
 , "k" text
 , "v" text
 , "elapsed_ms" integer
 , "start_ts" timestamp without time zone
 , "filename" text
 , "host_name" text
 , "ts" timestamp without time zone
 , "pid" integer
 , "line" text
 , "elapsed_ms" integer
 , "start_ts" timestamp without time zone
 , "error" text
 , "host_name" text
 , "filename" text
 , "line" text
 , "error" text
 , "host_name" text
 , "filename" text
 , "line" text
 , "error" text
 , "host_name" text
 , "filename" text
 , "line" text
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:34:43,020 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:35:16,725 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:35:16,730 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
 , "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:35:16,730 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:35:49,384 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:35:49,389 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
"host_name" text
,"process" text
,"ts" timestamp without time zone
,"pid" bigint
,"tid" bigint
,"cpu_time" bigint
,"poll_cycle_ts" timestamp without time zone
,"start_ts" timestamp without time zone
,"thread_count" integer
,"working_set" bigint
,"thread_level" boolean
,) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:35:49,389 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:36:23,996 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:36:24,001 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
 "host_name" text
, "process" text
, "ts" timestamp without time zone
, "pid" bigint
, "tid" bigint
, "cpu_time" bigint
, "poll_cycle_ts" timestamp without time zone
, "start_ts" timestamp without time zone
, "thread_count" integer
, "working_set" bigint
, "thread_level" boolean
,) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:36:24,001 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:36:44,394 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:36:44,399 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
"host_name" text,
"process" text,
"ts" timestamp without time zone,
"pid" bigint,
"tid" bigint,
"cpu_time" bigint,
"poll_cycle_ts" timestamp without time zone,
"start_ts" timestamp without time zone,
"thread_count" integer,
"working_set" bigint,
"thread_level" boolean,
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:36:44,399 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:36:54,842 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:36:54,847 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
 "host_name" text,
 "process" text,
 "ts" timestamp without time zone,
 "pid" bigint,
 "tid" bigint,
 "cpu_time" bigint,
 "poll_cycle_ts" timestamp without time zone,
 "start_ts" timestamp without time zone,
 "thread_count" integer,
 "working_set" bigint,
 "thread_level" boolean,
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:36:54,847 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:37:00,126 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:37:00,131 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
  "host_name" text,
  "process" text,
  "ts" timestamp without time zone,
  "pid" bigint,
  "tid" bigint,
  "cpu_time" bigint,
  "poll_cycle_ts" timestamp without time zone,
  "start_ts" timestamp without time zone,
  "thread_count" integer,
  "working_set" bigint,
  "thread_level" boolean,
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:37:00,131 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:37:21,318 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:37:21,324 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
"host_name"  , text
"process"  , text
"ts"  , timestamp without time zone
"pid"  , bigint
"tid"  , bigint
"cpu_time"  , bigint
"poll_cycle_ts"  , timestamp without time zone
"start_ts"  , timestamp without time zone
"thread_count"  , integer
"working_set"  , bigint
"thread_level"  , boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:37:21,324 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:37:32,011 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:37:32,016 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
 , "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:37:32,016 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:37:50,546 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:37:50,555 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
"host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
 , ) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:37:50,555 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:37:57,810 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:37:57,814 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
  "host_name" text
 ,   "process" text
 ,   "ts" timestamp without time zone
 ,   "pid" bigint
 ,   "tid" bigint
 ,   "cpu_time" bigint
 ,   "poll_cycle_ts" timestamp without time zone
 ,   "start_ts" timestamp without time zone
 ,   "thread_count" integer
 ,   "working_set" bigint
 ,   "thread_level" boolean
 , ) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:37:57,814 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:38:07,810 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:38:07,815 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
  "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
 , ) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:38:07,815 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:38:11,188 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:38:11,192 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
 , ) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:38:11,192 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:39:00,780 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:39:00,785 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
 , ) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:39:00,785 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:39:35,378 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:39:35,383 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
 ,  CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
 , ) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:39:35,383 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:39:41,508 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:39:41,514 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
 ,  CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:39:41,514 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:44:00,877 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:44:00,882 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
 ,  CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:44:00,882 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 13:44:31,078 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 13:44:31,093 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
 ,  CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 13:44:31,093 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 14:01:28,369 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 14:01:28,374 - FATAL - loadtables - Unhandled exception occurred: unsupported operand type(s) for +: 'function' and 'str'
2016-09-12 14:01:47,527 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 14:01:47,532 - FATAL - loadtables - Unhandled exception occurred: local variable 'cols_def' referenced before assignment
2016-09-12 14:02:11,861 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 14:02:11,867 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
"thread_count" integer
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
"thread_count" integer
"working_set" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
"thread_count" integer
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
"thread_count" integer
"working_set" bigint
"thread_level" boolean
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
"thread_count" integer
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
"thread_count" integer
"working_set" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
"thread_count" integer
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
"thread_count" integer
"working_set" bigint
"thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 14:02:11,872 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 14:03:39,156 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 14:03:39,161 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
"thread_count" integer
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
"thread_count" integer
"working_set" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
"thread_count" integer
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
"thread_count" integer
"working_set" bigint
"thread_level" boolean
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
"thread_count" integer
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
"thread_count" integer
"working_set" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
"thread_count" integer
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
 ,    "host_name" text
 ,    "host_name" text
"process" text
 ,    "host_name" text
 ,    "host_name" text
"process" text
"ts" timestamp without time zone
"pid" bigint
"tid" bigint
"cpu_time" bigint
"poll_cycle_ts" timestamp without time zone
"start_ts" timestamp without time zone
"thread_count" integer
"working_set" bigint
"thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 14:03:39,166 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 14:05:09,216 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 14:05:09,222 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
 ,    "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 14:05:09,222 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 14:05:42,881 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 14:05:42,886 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
 ,    "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 14:05:42,886 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 14:08:14,478 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 14:08:14,483 - FATAL - loadtables - Unhandled exception occurred: name 'get_column_full_type_def' is not defined
2016-09-12 14:08:24,379 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 14:08:24,385 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 14:08:24,385 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 14:11:04,948 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 14:11:04,954 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 14:11:04,954 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 14:12:51,440 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 14:12:51,445 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 14:12:51,445 - FATAL - loadtables - Unhandled exception occurred: name 'getObjectName' is not defined
2016-09-12 14:13:26,492 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 14:13:26,497 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 14:13:26,497 - FATAL - loadtables - Unhandled exception occurred: name 'schmea' is not defined
2016-09-12 14:13:45,512 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 14:13:45,516 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 14:13:45,517 - FATAL - loadtables - Unhandled exception occurred: name 'columns_def' is not defined
2016-09-12 14:13:58,629 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 14:13:58,633 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 14:13:58,633 - FATAL - loadtables - Unhandled exception occurred: name 'getObjectName' is not defined
2016-09-12 14:14:11,444 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 14:14:11,449 - DEBUG - sql_routines - get_create_table_query -  CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 14:14:11,449 - DEBUG - sql_routines - getExternalCreateTableQuery -  CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean

) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-12 14:14:11,449 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 14:14:38,270 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 14:14:38,274 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 14:14:38,274 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean

) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-12 14:14:38,275 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 14:15:10,162 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 14:15:10,167 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 14:15:10,167 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-12 14:15:10,167 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 15:05:00,768 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 15:05:00,773 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" 
 , "process" 
 , "ts" 
 , "pid" 
 , "tid" 
 , "cpu_time" 
 , "poll_cycle_ts" 
 , "start_ts" 
 , "thread_count" 
 , "working_set" 
 , "thread_level" 
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 15:05:00,773 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" 
 , "process" 
 , "ts" 
 , "pid" 
 , "tid" 
 , "cpu_time" 
 , "poll_cycle_ts" 
 , "start_ts" 
 , "thread_count" 
 , "working_set" 
 , "thread_level" 
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-12 15:05:00,774 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 15:05:14,653 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 15:05:14,658 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 15:05:14,658 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-12 15:05:14,658 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 15:05:22,812 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 15:05:22,817 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" 
 , "process" 
 , "ts" 
 , "pid" 
 , "tid" 
 , "cpu_time" 
 , "poll_cycle_ts" 
 , "start_ts" 
 , "thread_count" 
 , "working_set" 
 , "thread_level" 
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 15:05:22,817 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" 
 , "process" 
 , "ts" 
 , "pid" 
 , "tid" 
 , "cpu_time" 
 , "poll_cycle_ts" 
 , "start_ts" 
 , "thread_count" 
 , "working_set" 
 , "thread_level" 
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-12 15:05:22,817 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 15:05:40,846 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 15:05:40,850 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 15:05:40,851 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-12 15:05:40,851 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 15:05:46,215 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 15:05:46,220 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 15:05:46,220 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-12 15:05:46,220 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 15:06:15,576 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 15:06:15,581 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 15:06:15,581 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-12 15:06:15,582 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 16:20:10,354 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 16:20:10,359 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 16:20:10,359 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-12 16:20:10,359 - INFO  - loadtables - End Insight GP-Import.
2016-09-12 16:45:03,751 - INFO  - loadtables - Start Insight GP-Import.
2016-09-12 16:45:03,757 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-12 16:45:03,758 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-12 16:45:03,758 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 08:16:02,899 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 08:16:02,910 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 08:16:02,910 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 08:16:02,910 - FATAL - loadtables - Unhandled exception occurred: 'str' object has no attribute 'substring'
2016-09-13 08:16:17,530 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 08:16:17,535 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 08:16:17,535 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 08:16:17,535 - FATAL - loadtables - Unhandled exception occurred: 'str' object has no attribute 'substring'
2016-09-13 08:18:32,342 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 08:18:32,347 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 08:18:32,348 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 08:18:32,348 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 08:18:34,944 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 08:18:34,949 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 08:18:34,949 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 08:18:34,949 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 08:19:02,855 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 08:19:02,861 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 08:19:02,861 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 08:19:02,861 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 08:19:23,063 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 08:19:23,069 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 08:19:23,069 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 08:19:23,070 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 08:24:08,471 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 08:24:08,475 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 08:24:08,476 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 08:24:08,476 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 08:25:52,170 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 08:25:52,175 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 08:25:52,175 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 08:25:52,175 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 09:08:14,994 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:08:15,000 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:08:15,000 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:08:15,000 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 09:11:53,667 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:11:53,673 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:11:53,673 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:11:53,673 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 09:14:27,637 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:14:27,642 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:14:27,642 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:14:27,642 - FATAL - loadtables - Unhandled exception occurred: 'NoneType' object is not subscriptable
2016-09-13 09:14:31,682 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:14:31,687 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:14:31,688 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:14:31,688 - FATAL - loadtables - Unhandled exception occurred: 'NoneType' object is not subscriptable
2016-09-13 09:14:42,643 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:14:42,648 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:14:42,649 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:14:42,649 - FATAL - loadtables - Unhandled exception occurred: 'NoneType' object is not subscriptable
2016-09-13 09:14:47,510 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:14:47,516 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:14:47,516 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:14:47,516 - FATAL - loadtables - Unhandled exception occurred: 'NoneType' object is not subscriptable
2016-09-13 09:14:52,801 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:14:52,806 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:14:52,806 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:14:52,806 - FATAL - loadtables - Unhandled exception occurred: 'NoneType' object is not subscriptable
2016-09-13 09:15:02,349 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:15:02,353 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:15:02,354 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:15:02,354 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 09:15:07,388 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:15:07,393 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:15:07,393 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:15:07,393 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 09:15:12,546 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:15:12,551 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:15:12,551 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:15:12,551 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 09:17:05,866 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:17:05,872 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:17:05,872 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:17:05,872 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 09:17:15,479 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:17:15,484 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:17:15,484 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:17:15,485 - FATAL - loadtables - Unhandled exception occurred: 'str' object has no attribute 'length'
2016-09-13 09:17:19,150 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:17:19,155 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:17:19,155 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:17:19,155 - FATAL - loadtables - Unhandled exception occurred: 'str' object has no attribute 'length'
2016-09-13 09:17:43,447 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:17:43,452 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:17:43,452 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:17:43,452 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 09:19:46,194 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:19:46,199 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:19:46,199 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:19:46,200 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 09:37:02,054 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:37:02,059 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:37:02,059 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:37:02,062 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 09:39:31,540 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:39:31,546 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:39:31,546 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:39:31,547 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 09:40:09,316 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:40:09,321 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:40:09,321 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:40:09,321 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 09:40:13,797 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:40:13,802 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:40:13,802 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:40:13,802 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 09:40:19,696 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:40:19,700 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:40:19,700 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:40:19,701 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 09:40:25,832 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:40:25,837 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:40:25,837 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:40:25,837 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 09:40:32,349 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:40:32,354 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:40:32,354 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:40:32,354 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 09:40:41,556 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:40:41,561 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:40:41,561 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:40:41,561 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 09:40:47,926 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:40:47,930 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:40:47,931 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:40:47,931 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 09:41:38,428 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 09:41:38,433 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 09:41:38,433 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 09:41:38,433 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 10:14:12,973 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:14:12,978 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 10:14:12,978 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 10:14:12,978 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 10:15:11,656 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:15:11,661 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 10:15:11,661 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 10:15:11,661 - FATAL - loadtables - Unhandled exception occurred: 1
2016-09-13 10:15:20,077 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:15:20,082 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 10:15:20,082 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 10:15:20,082 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 10:15:27,561 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:15:27,566 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 10:15:27,566 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 10:15:27,566 - FATAL - loadtables - Unhandled exception occurred: type object 'map' has no attribute 'append'
2016-09-13 10:15:35,674 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:15:35,679 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 10:15:35,679 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 10:15:35,679 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 10:16:34,797 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:16:34,802 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 10:16:34,802 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 10:16:34,802 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 10:16:40,948 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:16:40,953 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 10:16:40,953 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 10:16:40,954 - FATAL - loadtables - Unhandled exception occurred: type object 'map' has no attribute 'append'
2016-09-13 10:16:46,966 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:16:46,971 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 10:16:46,972 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 10:16:46,972 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 10:17:00,804 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:17:00,808 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 10:17:00,809 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 10:17:00,809 - FATAL - loadtables - Unhandled exception occurred: 1
2016-09-13 10:17:22,736 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:17:22,742 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 10:17:22,742 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 10:17:22,742 - FATAL - loadtables - Unhandled exception occurred: 1
2016-09-13 10:17:29,402 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:17:29,406 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 10:17:29,406 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 10:17:29,407 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 10:17:34,536 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:17:34,541 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 10:17:34,541 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 10:17:34,542 - FATAL - loadtables - Unhandled exception occurred: '2'
2016-09-13 10:18:26,427 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:18:26,432 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 10:18:26,432 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 10:18:26,432 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 10:18:31,961 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:18:31,967 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 10:18:31,968 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 10:18:31,968 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 10:19:01,568 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:19:01,573 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 10:19:01,574 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 10:19:01,574 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 10:19:13,404 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:19:13,409 - DEBUG - sql_routines - get_create_table_query - 
 CREATE TABLE "palette"."threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 10:19:13,409 - DEBUG - sql_routines - getExternalCreateTableQuery - 
 CREATE READABLE EXTERNAL TABLE "palette"."ext_threadinfo"
(
   "host_name" text
 , "process" text
 , "ts" timestamp without time zone
 , "pid" bigint
 , "tid" bigint
 , "cpu_time" bigint
 , "poll_cycle_ts" timestamp without time zone
 , "start_ts" timestamp without time zone
 , "thread_count" integer
 , "working_set" bigint
 , "thread_level" boolean
) LOCATION ('#EXTERNAL_TABLE') 
 FORMAT 'TEXT' 
 ( HEADER DELIMITER '\013' NULL AS '\\N' ESCAPE AS '\\' 
)	LOG ERRORS INTO "palette"."ext_error_table" 
 SEGMENT REJECT LIMIT 1000 ROWS
2016-09-13 10:19:13,410 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 10:45:29,176 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:45:29,178 - DEBUG - database   - Start creating database connection
2016-09-13 10:45:31,186 - FATAL - loadtables - Unhandled exception occurred: could not connect to server: Connection refused (0x0000274D/10061)
	Is the server running on host "localhost" (::1) and accepting
	TCP/IP connections on port 5432?
could not connect to server: Connection refused (0x0000274D/10061)
	Is the server running on host "localhost" (127.0.0.1) and accepting
	TCP/IP connections on port 5432?

2016-09-13 10:46:57,616 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:46:57,616 - DEBUG - database   - Start creating database connection
2016-09-13 10:46:58,587 - DEBUG - database   - End creating database connection
2016-09-13 10:46:58,598 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 10:46:58,598 - DEBUG - database   - Database connection is closed
2016-09-13 10:49:13,619 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:49:13,619 - DEBUG - database   - Start creating database connection
2016-09-13 10:49:14,546 - DEBUG - database   - End creating database connection
2016-09-13 10:49:14,552 - FATAL - loadtables - Unhandled exception occurred: name 'db' is not defined
2016-09-13 10:49:14,559 - DEBUG - database   - Database connection is closed
2016-09-13 10:49:50,388 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:49:50,389 - DEBUG - database   - Start creating database connection
2016-09-13 10:49:51,287 - DEBUG - database   - End creating database connection
2016-09-13 10:49:51,303 - FATAL - loadtables - Unhandled exception occurred: get_table_columns_meta_from_db() missing 1 required positional argument: 'db'
2016-09-13 10:49:51,313 - DEBUG - database   - Database connection is closed
2016-09-13 10:51:30,310 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:51:30,310 - DEBUG - database   - Start creating database connection
2016-09-13 10:51:31,233 - DEBUG - database   - End creating database connection
2016-09-13 10:51:31,239 - FATAL - loadtables - Unhandled exception occurred: string indices must be integers
2016-09-13 10:51:31,248 - DEBUG - database   - Database connection is closed
2016-09-13 10:53:08,993 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:53:08,993 - DEBUG - database   - Start creating database connection
2016-09-13 10:53:09,892 - DEBUG - database   - End creating database connection
2016-09-13 10:53:09,900 - FATAL - loadtables - Unhandled exception occurred: string indices must be integers
2016-09-13 10:53:09,908 - DEBUG - database   - Database connection is closed
2016-09-13 10:55:53,132 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 10:55:53,133 - DEBUG - database   - Start creating database connection
2016-09-13 10:55:54,043 - DEBUG - database   - End creating database connection
2016-09-13 10:55:54,450 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 10:55:54,451 - DEBUG - database   - Database connection is closed
2016-09-13 11:01:17,152 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:01:17,152 - DEBUG - database   - Start creating database connection
2016-09-13 11:01:18,111 - DEBUG - database   - End creating database connection
2016-09-13 11:01:18,116 - FATAL - loadtables - Unhandled exception occurred: get_table_columns_meta_from_db() missing 2 required positional arguments: 'schema' and 'table'
2016-09-13 11:01:18,123 - DEBUG - database   - Database connection is closed
2016-09-13 11:01:38,273 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:01:38,274 - DEBUG - database   - Start creating database connection
2016-09-13 11:01:39,151 - DEBUG - database   - End creating database connection
2016-09-13 11:01:39,583 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 11:01:39,583 - DEBUG - database   - Database connection is closed
2016-09-13 11:02:41,845 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:02:41,846 - DEBUG - database   - Start creating database connection
2016-09-13 11:02:42,737 - DEBUG - database   - End creating database connection
2016-09-13 11:02:42,754 - DEBUG - database   - Start "SELECT n.nspname as schemaname, c.relname as tablename,
                    a.attname as columnname,
                    format_type(a.atttypid, a.atttypmod),
                    a.attnum
                    FROM pg_namespace n
                      JOIN pg_class c ON (n.oid = c.relnamespace)
                      JOIN pg_attribute a ON (c.oid = a.attrelid)
                      JOIN pg_type t ON (a.atttypid = t.oid)
                    WHERE 1 = 1
                    AND   nspname = %s
					AND c.relname like %s
                    AND a.attnum > 0 /*filter out the internal columns*/
                    ORDER BY n.nspname,c.relname,a.attnum ASC"
2016-09-13 11:02:43,080 - DEBUG - database   - End "SELECT n.nspname as schemaname, c.relname as tablename,
                    a.attname as columnname,
                    format_type(a.atttypid, a.atttypmod),
                    a.attnum
                    FROM pg_namespace n
                      JOIN pg_class c ON (n.oid = c.relnamespace)
                      JOIN pg_attribute a ON (c.oid = a.attrelid)
                      JOIN pg_type t ON (a.atttypid = t.oid)
                    WHERE 1 = 1
                    AND   nspname = %s
					AND c.relname like %s
                    AND a.attnum > 0 /*filter out the internal columns*/
                    ORDER BY n.nspname,c.relname,a.attnum ASC" return with: palette
2016-09-13 11:02:43,212 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 11:02:43,213 - DEBUG - database   - Database connection is closed
2016-09-13 11:04:58,194 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:04:58,194 - DEBUG - database   - Start creating database connection
2016-09-13 11:04:59,080 - DEBUG - database   - End creating database connection
2016-09-13 11:04:59,546 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 11:04:59,546 - DEBUG - database   - Database connection is closed
2016-09-13 11:06:20,400 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:06:20,400 - DEBUG - database   - Start creating database connection
2016-09-13 11:06:21,392 - DEBUG - database   - End creating database connection
2016-09-13 11:06:21,844 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 11:06:21,844 - DEBUG - database   - Database connection is closed
2016-09-13 11:06:48,272 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:06:48,272 - DEBUG - database   - Start creating database connection
2016-09-13 11:06:49,186 - DEBUG - database   - End creating database connection
2016-09-13 11:06:49,634 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 11:06:49,635 - DEBUG - database   - Database connection is closed
2016-09-13 11:07:46,477 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:07:46,477 - DEBUG - database   - Start creating database connection
2016-09-13 11:07:47,374 - DEBUG - database   - End creating database connection
2016-09-13 11:07:47,832 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 11:07:47,833 - DEBUG - database   - Database connection is closed
2016-09-13 11:08:47,380 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:08:47,380 - DEBUG - database   - Start creating database connection
2016-09-13 11:08:48,325 - DEBUG - database   - End creating database connection
2016-09-13 11:08:48,783 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 11:08:48,784 - DEBUG - database   - Database connection is closed
2016-09-13 11:09:07,240 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:09:07,241 - DEBUG - database   - Start creating database connection
2016-09-13 11:09:08,112 - DEBUG - database   - End creating database connection
2016-09-13 11:09:08,545 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 11:09:08,546 - DEBUG - database   - Database connection is closed
2016-09-13 11:11:38,825 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:11:38,825 - DEBUG - database   - Start creating database connection
2016-09-13 11:11:39,707 - DEBUG - database   - End creating database connection
2016-09-13 11:11:40,134 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 11:11:40,135 - DEBUG - database   - Database connection is closed
2016-09-13 11:13:41,166 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:13:41,167 - DEBUG - database   - Start creating database connection
2016-09-13 11:13:42,092 - DEBUG - database   - End creating database connection
2016-09-13 11:13:42,528 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 11:13:42,529 - DEBUG - database   - Database connection is closed
2016-09-13 11:14:31,567 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:14:31,568 - DEBUG - database   - Start creating database connection
2016-09-13 11:14:38,137 - DEBUG - database   - End creating database connection
2016-09-13 11:14:38,582 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 11:14:38,582 - DEBUG - database   - Database connection is closed
2016-09-13 11:15:16,249 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:15:16,250 - DEBUG - database   - Start creating database connection
2016-09-13 11:15:17,152 - DEBUG - database   - End creating database connection
2016-09-13 11:15:17,539 - FATAL - loadtables - Unhandled exception occurred: syntax error at or near "%"
LINE 10:                     AND nspname = %(schema)s
                                           ^

2016-09-13 11:15:17,551 - DEBUG - database   - Database connection is closed
2016-09-13 11:15:24,868 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:15:24,868 - DEBUG - database   - Start creating database connection
2016-09-13 11:15:25,802 - DEBUG - database   - End creating database connection
2016-09-13 11:15:26,245 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 11:15:26,246 - DEBUG - database   - Database connection is closed
2016-09-13 11:47:08,780 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:47:08,780 - DEBUG - database   - Start creating database connection
2016-09-13 11:47:09,679 - DEBUG - database   - End creating database connection
2016-09-13 11:47:10,101 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 11:47:10,102 - DEBUG - database   - Database connection is closed
2016-09-13 11:47:24,333 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:47:24,334 - DEBUG - database   - Start creating database connection
2016-09-13 11:47:25,276 - DEBUG - database   - End creating database connection
2016-09-13 11:47:25,750 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 11:47:25,751 - DEBUG - database   - Database connection is closed
2016-09-13 11:56:34,665 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:56:34,665 - DEBUG - database   - Start creating database connection
2016-09-13 11:56:35,609 - DEBUG - database   - End creating database connection
2016-09-13 11:56:36,108 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 11:56:36,109 - DEBUG - database   - Database connection is closed
2016-09-13 11:57:34,935 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:57:34,935 - DEBUG - database   - Start creating database connection
2016-09-13 11:57:35,836 - DEBUG - database   - End creating database connection
2016-09-13 11:57:36,287 - FATAL - loadtables - Unhandled exception occurred: name 'colmns_def' is not defined
2016-09-13 11:57:36,306 - DEBUG - database   - Database connection is closed
2016-09-13 11:57:56,467 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:57:56,467 - DEBUG - database   - Start creating database connection
2016-09-13 11:57:57,362 - DEBUG - database   - End creating database connection
2016-09-13 11:57:57,802 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 11:57:57,803 - DEBUG - database   - Database connection is closed
2016-09-13 11:59:30,132 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:59:30,132 - DEBUG - database   - Start creating database connection
2016-09-13 11:59:31,001 - DEBUG - database   - End creating database connection
2016-09-13 11:59:31,449 - FATAL - loadtables - Unhandled exception occurred: 'list' object has no attribute 'name'
2016-09-13 11:59:31,461 - DEBUG - database   - Database connection is closed
2016-09-13 11:59:41,136 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:59:41,137 - DEBUG - database   - Start creating database connection
2016-09-13 11:59:41,993 - DEBUG - database   - End creating database connection
2016-09-13 11:59:42,396 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 11:59:42,397 - DEBUG - database   - Database connection is closed
2016-09-13 11:59:45,911 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 11:59:45,911 - DEBUG - database   - Start creating database connection
2016-09-13 11:59:46,795 - DEBUG - database   - End creating database connection
2016-09-13 11:59:47,230 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 11:59:47,231 - DEBUG - database   - Database connection is closed
2016-09-13 12:00:00,613 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:00:00,613 - DEBUG - database   - Start creating database connection
2016-09-13 12:00:01,528 - DEBUG - database   - End creating database connection
2016-09-13 12:00:01,974 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:00:01,975 - DEBUG - database   - Database connection is closed
2016-09-13 12:01:30,459 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:01:30,459 - DEBUG - database   - Start creating database connection
2016-09-13 12:01:31,343 - DEBUG - database   - End creating database connection
2016-09-13 12:01:31,782 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:01:31,783 - DEBUG - database   - Database connection is closed
2016-09-13 12:02:13,612 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:02:13,612 - DEBUG - database   - Start creating database connection
2016-09-13 12:02:14,567 - DEBUG - database   - End creating database connection
2016-09-13 12:02:15,029 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:02:15,030 - DEBUG - database   - Database connection is closed
2016-09-13 12:02:34,466 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:02:34,466 - DEBUG - database   - Start creating database connection
2016-09-13 12:02:35,341 - DEBUG - database   - End creating database connection
2016-09-13 12:02:35,815 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:02:35,816 - DEBUG - database   - Database connection is closed
2016-09-13 12:03:53,077 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:03:53,077 - DEBUG - database   - Start creating database connection
2016-09-13 12:03:53,972 - DEBUG - database   - End creating database connection
2016-09-13 12:03:54,407 - FATAL - loadtables - Unhandled exception occurred: name 'col_name' is not defined
2016-09-13 12:03:54,417 - DEBUG - database   - Database connection is closed
2016-09-13 12:04:02,856 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:04:02,856 - DEBUG - database   - Start creating database connection
2016-09-13 12:04:03,793 - DEBUG - database   - End creating database connection
2016-09-13 12:04:04,235 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:04:04,235 - DEBUG - database   - Database connection is closed
2016-09-13 12:04:23,766 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:04:23,766 - DEBUG - database   - Start creating database connection
2016-09-13 12:04:24,669 - DEBUG - database   - End creating database connection
2016-09-13 12:04:25,097 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:04:25,097 - DEBUG - database   - Database connection is closed
2016-09-13 12:05:13,777 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:05:13,777 - DEBUG - database   - Start creating database connection
2016-09-13 12:05:14,707 - DEBUG - database   - End creating database connection
2016-09-13 12:05:15,170 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:05:15,171 - DEBUG - database   - Database connection is closed
2016-09-13 12:05:39,511 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:05:39,512 - DEBUG - database   - Start creating database connection
2016-09-13 12:05:40,388 - DEBUG - database   - End creating database connection
2016-09-13 12:05:40,796 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:05:40,797 - DEBUG - database   - Database connection is closed
2016-09-13 12:06:16,057 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:06:16,057 - DEBUG - database   - Start creating database connection
2016-09-13 12:06:16,969 - DEBUG - database   - End creating database connection
2016-09-13 12:06:17,473 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:06:17,473 - DEBUG - database   - Database connection is closed
2016-09-13 12:06:39,616 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:06:39,616 - DEBUG - database   - Start creating database connection
2016-09-13 12:06:40,489 - DEBUG - database   - End creating database connection
2016-09-13 12:06:40,920 - FATAL - loadtables - Unhandled exception occurred: name 'col_names' is not defined
2016-09-13 12:06:40,940 - DEBUG - database   - Database connection is closed
2016-09-13 12:06:43,854 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:06:43,854 - DEBUG - database   - Start creating database connection
2016-09-13 12:06:44,805 - DEBUG - database   - End creating database connection
2016-09-13 12:06:45,297 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:06:45,298 - DEBUG - database   - Database connection is closed
2016-09-13 12:06:56,984 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:06:56,984 - DEBUG - database   - Start creating database connection
2016-09-13 12:06:57,975 - DEBUG - database   - End creating database connection
2016-09-13 12:06:58,416 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:06:58,416 - DEBUG - database   - Database connection is closed
2016-09-13 12:07:48,517 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:07:48,517 - DEBUG - database   - Start creating database connection
2016-09-13 12:07:49,433 - DEBUG - database   - End creating database connection
2016-09-13 12:07:49,901 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:07:49,902 - DEBUG - database   - Database connection is closed
2016-09-13 12:09:12,140 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:09:12,140 - DEBUG - database   - Start creating database connection
2016-09-13 12:09:13,031 - DEBUG - database   - End creating database connection
2016-09-13 12:09:13,479 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:09:13,480 - DEBUG - database   - Database connection is closed
2016-09-13 12:09:56,942 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:09:56,942 - DEBUG - database   - Start creating database connection
2016-09-13 12:09:57,872 - DEBUG - database   - End creating database connection
2016-09-13 12:09:58,330 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:09:58,330 - DEBUG - database   - Database connection is closed
2016-09-13 12:10:12,288 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:10:12,288 - DEBUG - database   - Start creating database connection
2016-09-13 12:10:13,230 - DEBUG - database   - End creating database connection
2016-09-13 12:10:13,679 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:10:13,679 - DEBUG - database   - Database connection is closed
2016-09-13 12:17:17,973 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:17:17,973 - DEBUG - database   - Start creating database connection
2016-09-13 12:17:18,928 - DEBUG - database   - End creating database connection
2016-09-13 12:17:19,387 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:17:19,388 - DEBUG - database   - Database connection is closed
2016-09-13 12:18:22,951 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:18:22,952 - DEBUG - database   - Start creating database connection
2016-09-13 12:18:23,863 - DEBUG - database   - End creating database connection
2016-09-13 12:18:24,331 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:18:24,332 - DEBUG - database   - Database connection is closed
2016-09-13 12:18:29,037 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:18:29,037 - DEBUG - database   - Start creating database connection
2016-09-13 12:18:30,342 - DEBUG - database   - End creating database connection
2016-09-13 12:18:30,836 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:18:30,837 - DEBUG - database   - Database connection is closed
2016-09-13 12:18:58,285 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:18:58,285 - DEBUG - database   - Start creating database connection
2016-09-13 12:18:59,204 - DEBUG - database   - End creating database connection
2016-09-13 12:18:59,635 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:18:59,635 - DEBUG - database   - Database connection is closed
2016-09-13 12:19:26,515 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:19:26,516 - DEBUG - database   - Start creating database connection
2016-09-13 12:19:27,390 - DEBUG - database   - End creating database connection
2016-09-13 12:19:27,786 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:19:27,786 - DEBUG - database   - Database connection is closed
2016-09-13 12:19:32,022 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:19:32,023 - DEBUG - database   - Start creating database connection
2016-09-13 12:19:32,885 - DEBUG - database   - End creating database connection
2016-09-13 12:19:33,358 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:19:33,359 - DEBUG - database   - Database connection is closed
2016-09-13 12:19:46,133 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:19:46,133 - DEBUG - database   - Start creating database connection
2016-09-13 12:19:47,036 - DEBUG - database   - End creating database connection
2016-09-13 12:19:47,513 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:19:47,514 - DEBUG - database   - Database connection is closed
2016-09-13 12:19:51,195 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 12:19:51,195 - DEBUG - database   - Start creating database connection
2016-09-13 12:19:52,131 - DEBUG - database   - End creating database connection
2016-09-13 12:19:52,550 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 12:19:52,551 - DEBUG - database   - Database connection is closed
2016-09-13 13:10:50,355 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 13:10:50,355 - DEBUG - database   - Start creating database connection
2016-09-13 13:10:54,297 - DEBUG - database   - End creating database connection
2016-09-13 13:10:54,768 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 13:10:54,769 - DEBUG - database   - Database connection is closed
2016-09-13 13:11:07,597 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 13:11:07,597 - DEBUG - database   - Start creating database connection
2016-09-13 13:11:08,527 - DEBUG - database   - End creating database connection
2016-09-13 13:11:08,544 - FATAL - loadtables - Unhandled exception occurred: Can't convert 'list' object to str implicitly
2016-09-13 13:11:08,562 - DEBUG - database   - Database connection is closed
2016-09-13 13:11:41,369 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 13:11:41,370 - DEBUG - database   - Start creating database connection
2016-09-13 13:11:42,237 - DEBUG - database   - End creating database connection
2016-09-13 13:11:42,254 - DEBUG - sql_routines - pk: ['id']
2016-09-13 13:11:42,255 - DEBUG - sql_routines - pk_part: id
2016-09-13 13:11:42,255 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id AND 
2016-09-13 13:11:42,255 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id AND 
2016-09-13 13:11:42,256 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id
2016-09-13 13:11:42,256 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id
2016-09-13 13:11:42,257 - FATAL - loadtables - Unhandled exception occurred: 'str' object has no attribute 'endsWith'
2016-09-13 13:11:42,271 - DEBUG - database   - Database connection is closed
2016-09-13 13:12:49,983 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 13:12:49,983 - DEBUG - database   - Start creating database connection
2016-09-13 13:12:50,924 - DEBUG - database   - End creating database connection
2016-09-13 13:12:50,939 - DEBUG - sql_routines - pk: ['id']
2016-09-13 13:12:50,940 - DEBUG - sql_routines - pk_part: id
2016-09-13 13:12:50,940 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id AND 
2016-09-13 13:12:50,940 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id AND 
2016-09-13 13:12:50,940 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id
2016-09-13 13:12:50,941 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id
2016-09-13 13:12:50,941 - FATAL - loadtables - Unhandled exception occurred: name 'false' is not defined
2016-09-13 13:12:50,952 - DEBUG - database   - Database connection is closed
2016-09-13 13:13:06,733 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 13:13:06,734 - DEBUG - database   - Start creating database connection
2016-09-13 13:13:07,647 - DEBUG - database   - End creating database connection
2016-09-13 13:13:07,656 - DEBUG - sql_routines - pk: ['id']
2016-09-13 13:13:07,656 - DEBUG - sql_routines - pk_part: id
2016-09-13 13:13:07,656 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id AND 
2016-09-13 13:13:07,656 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id AND 
2016-09-13 13:13:07,656 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id
2016-09-13 13:13:07,656 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id
2016-09-13 13:13:07,657 - DEBUG - sql_routines - StageFullCreate - CREATE TABLE palette.s_threadinfo 
 ( 
   host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean
 ) 
2016-09-13 13:13:07,657 - DEBUG - sql_routines - DWHtableCreate - CREATE TABLE palette.h_threadinfo 
" +
                        "( 
" +
                        "  p_id serial,
" +
                        "    host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean,
" +
                        "  p_active_flag character varying(1),
" +
                        "  p_valid_from timestamp without time zone,
" +
                        "  p_valid_to timestamp without time zone 
" +
                        ") " +
                        "WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 13:13:07,657 - DEBUG - sql_routines - DWHviewCreate - CREATE VIEW palette.threadinfo AS 
" +
    							"SELECT 
" +
    							"  host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level
" +
    							"FROM palette.h_threadinfo 
" +
    							"WHERE p_active_flag='Y' 
2016-09-13 13:13:07,657 - DEBUG - sql_routines - DWHtableUpdateSCD - UPDATE palette.h_threadinfo 
" +
                            "SET 
" +
                            "  p_valid_to=('2016-06-08 13:22:15'::timestamp -INTERVAL '1' second)::TIMESTAMP, 
" +
                            "  p_active_flag='N' 
" +
                            "FROM 
" +
                            "( 
" +
                            "  SELECT 
" +
                            "    , 
" +
                            "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                            "      h_threadinfo.host_name, 
  h_threadinfo.process, 
  h_threadinfo.ts, 
  h_threadinfo.pid, 
  h_threadinfo.tid, 
  h_threadinfo.cpu_time, 
  h_threadinfo.poll_cycle_ts, 
  h_threadinfo.start_ts, 
  h_threadinfo.thread_count, 
  h_threadinfo.working_set, 
  h_threadinfo.thread_level,
" +
                            "    h_threadinfo.p_valid_from, 
" +
                            "    h_threadinfo.p_valid_to, 
" +
                            "    h_threadinfo.p_active_flag 
" +
                            "  FROM 
" +
                            "    ( 
" +
                            "      SELECT * 
" +
                            "      FROM palette.h_threadinfo 
" +
                            "      WHERE p_valid_to='21000101'::DATE::TIMESTAMP 
" +
                            "    ) h_threadinfo 
" +
                            "    FULL OUTER JOIN palette.s_threadinfo 
" +
                            "    ON h_threadinfo.id=s_threadinfo.id 
" +
                            ") t 
" +
                            "WHERE 
" +
                            "  h_threadinfo.id=t.id AND 
" +
                            "  h_threadinfo.p_valid_to='21000101'::DATE::TIMESTAMP AND 
" +
                            "  ( 
" +
                            "    t.sql_type='DELETE' OR 
" +
                            "    (t.sql_type='UPDATE' AND is_equal LIKE '%N%') 
" +
                            "  )
2016-09-13 13:13:07,659 - DEBUG - sql_routines - DWHtableInsertSCD - INSERT INTO palette.h_threadinfo 
" +
                                "( 
" +
                              "    host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level,
" +
                              "  p_active_flag,
" +
                              "  p_valid_from,
" +
                              "  p_valid_to
" +
                              ") 
" +
                              "SELECT 
" +
                              "    t.host_name, 
  t.process, 
  t.ts, 
  t.pid, 
  t.tid, 
  t.cpu_time, 
  t.poll_cycle_ts, 
  t.start_ts, 
  t.thread_count, 
  t.working_set, 
  t.thread_level,
" +
                              "  'Y'::VARCHAR(1) p_active_flag, 
" +
                              "   CASE WHEN t.sql_type='INSERT' THEN '10010101'::date::timestamp ELSE '2016-06-08 13:22:15'::TIMESTAMP END p_valid_from ,
" +
                              "  '21000101'::DATE::TIMESTAMP p_valid_to 
" +
                              "FROM 
" +
                              "( 
" +
                              "  SELECT 
" +
                              "    , 
" +
                              "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                              "      s_threadinfo.host_name, 
  s_threadinfo.process, 
  s_threadinfo.ts, 
  s_threadinfo.pid, 
  s_threadinfo.tid, 
  s_threadinfo.cpu_time, 
  s_threadinfo.poll_cycle_ts, 
  s_threadinfo.start_ts, 
  s_threadinfo.thread_count, 
  s_threadinfo.working_set, 
  s_threadinfo.thread_level,
" +
                              "    h_threadinfo.p_valid_from, 
" +
                              "    h_threadinfo.p_valid_to, 
" +
                              "    h_threadinfo.p_active_flag 
" +
                              "  FROM 
" +
                              "    ( 
" +
                              "		select * from ( 
" +
                              "		  select * ,row_number() OVER (PARTITION BY " +pk+" ORDER BY p_valid_from DESC) as p_rn 
" +
                              "		  from palette.h_threadinfo ) tmp_h_threadinfo 
" +
                              "		  WHERE p_rn = 1 
" +

                              "    ) h_threadinfo 
" +
                              "    FULL OUTER JOIN palette.s_threadinfo 
" +
                              "    ON h_threadinfo.id=s_threadinfo.id 
" +
                              ") t 
" +
                              "WHERE 
" +
                              "  t.sql_type='INSERT' OR 
" +
                              "  (t.sql_type='UPDATE' AND is_equal LIKE '%N%')
2016-09-13 13:13:07,660 - FATAL - loadtables - Unhandled exception occurred: list indices must be integers or slices, not str
2016-09-13 13:13:07,666 - DEBUG - database   - Database connection is closed
2016-09-13 13:15:25,864 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 13:15:25,864 - DEBUG - database   - Start creating database connection
2016-09-13 13:15:26,763 - DEBUG - database   - End creating database connection
2016-09-13 13:15:26,772 - DEBUG - sql_routines - pk: ['id']
2016-09-13 13:15:26,772 - DEBUG - sql_routines - pk_part: id
2016-09-13 13:15:26,772 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id AND 
2016-09-13 13:15:26,772 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id AND 
2016-09-13 13:15:26,772 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id
2016-09-13 13:15:26,773 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id
2016-09-13 13:15:26,773 - DEBUG - sql_routines - StageFullCreate - CREATE TABLE palette.s_threadinfo 
 ( 
   host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean
 ) 
2016-09-13 13:15:26,773 - DEBUG - sql_routines - DWHtableCreate - CREATE TABLE palette.h_threadinfo 
" +
                        "( 
" +
                        "  p_id serial,
" +
                        "    host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean,
" +
                        "  p_active_flag character varying(1),
" +
                        "  p_valid_from timestamp without time zone,
" +
                        "  p_valid_to timestamp without time zone 
" +
                        ") " +
                        "WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 13:15:26,773 - DEBUG - sql_routines - DWHviewCreate - CREATE VIEW palette.threadinfo AS 
" +
    							"SELECT 
" +
    							"  host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level
" +
    							"FROM palette.h_threadinfo 
" +
    							"WHERE p_active_flag='Y' 
2016-09-13 13:15:26,773 - DEBUG - sql_routines - DWHtableUpdateSCD - UPDATE palette.h_threadinfo 
" +
                            "SET 
" +
                            "  p_valid_to=('2016-06-08 13:22:15'::timestamp -INTERVAL '1' second)::TIMESTAMP, 
" +
                            "  p_active_flag='N' 
" +
                            "FROM 
" +
                            "( 
" +
                            "  SELECT 
" +
                            "    , 
" +
                            "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                            "      h_threadinfo.host_name, 
  h_threadinfo.process, 
  h_threadinfo.ts, 
  h_threadinfo.pid, 
  h_threadinfo.tid, 
  h_threadinfo.cpu_time, 
  h_threadinfo.poll_cycle_ts, 
  h_threadinfo.start_ts, 
  h_threadinfo.thread_count, 
  h_threadinfo.working_set, 
  h_threadinfo.thread_level,
" +
                            "    h_threadinfo.p_valid_from, 
" +
                            "    h_threadinfo.p_valid_to, 
" +
                            "    h_threadinfo.p_active_flag 
" +
                            "  FROM 
" +
                            "    ( 
" +
                            "      SELECT * 
" +
                            "      FROM palette.h_threadinfo 
" +
                            "      WHERE p_valid_to='21000101'::DATE::TIMESTAMP 
" +
                            "    ) h_threadinfo 
" +
                            "    FULL OUTER JOIN palette.s_threadinfo 
" +
                            "    ON h_threadinfo.id=s_threadinfo.id 
" +
                            ") t 
" +
                            "WHERE 
" +
                            "  h_threadinfo.id=t.id AND 
" +
                            "  h_threadinfo.p_valid_to='21000101'::DATE::TIMESTAMP AND 
" +
                            "  ( 
" +
                            "    t.sql_type='DELETE' OR 
" +
                            "    (t.sql_type='UPDATE' AND is_equal LIKE '%N%') 
" +
                            "  )
2016-09-13 13:15:26,777 - DEBUG - sql_routines - DWHtableInsertSCD - INSERT INTO palette.h_threadinfo 
" +
                                "( 
" +
                              "    host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level,
" +
                              "  p_active_flag,
" +
                              "  p_valid_from,
" +
                              "  p_valid_to
" +
                              ") 
" +
                              "SELECT 
" +
                              "    t.host_name, 
  t.process, 
  t.ts, 
  t.pid, 
  t.tid, 
  t.cpu_time, 
  t.poll_cycle_ts, 
  t.start_ts, 
  t.thread_count, 
  t.working_set, 
  t.thread_level,
" +
                              "  'Y'::VARCHAR(1) p_active_flag, 
" +
                              "   CASE WHEN t.sql_type='INSERT' THEN '10010101'::date::timestamp ELSE '2016-06-08 13:22:15'::TIMESTAMP END p_valid_from ,
" +
                              "  '21000101'::DATE::TIMESTAMP p_valid_to 
" +
                              "FROM 
" +
                              "( 
" +
                              "  SELECT 
" +
                              "    , 
" +
                              "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                              "      s_threadinfo.host_name, 
  s_threadinfo.process, 
  s_threadinfo.ts, 
  s_threadinfo.pid, 
  s_threadinfo.tid, 
  s_threadinfo.cpu_time, 
  s_threadinfo.poll_cycle_ts, 
  s_threadinfo.start_ts, 
  s_threadinfo.thread_count, 
  s_threadinfo.working_set, 
  s_threadinfo.thread_level,
" +
                              "    h_threadinfo.p_valid_from, 
" +
                              "    h_threadinfo.p_valid_to, 
" +
                              "    h_threadinfo.p_active_flag 
" +
                              "  FROM 
" +
                              "    ( 
" +
                              "		select * from ( 
" +
                              "		  select * ,row_number() OVER (PARTITION BY " +pk+" ORDER BY p_valid_from DESC) as p_rn 
" +
                              "		  from palette.h_threadinfo ) tmp_h_threadinfo 
" +
                              "		  WHERE p_rn = 1 
" +

                              "    ) h_threadinfo 
" +
                              "    FULL OUTER JOIN palette.s_threadinfo 
" +
                              "    ON h_threadinfo.id=s_threadinfo.id 
" +
                              ") t 
" +
                              "WHERE 
" +
                              "  t.sql_type='INSERT' OR 
" +
                              "  (t.sql_type='UPDATE' AND is_equal LIKE '%N%')
2016-09-13 13:15:26,778 - FATAL - loadtables - Unhandled exception occurred: list indices must be integers or slices, not str
2016-09-13 13:15:26,784 - DEBUG - database   - Database connection is closed
2016-09-13 13:15:43,636 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 13:15:43,636 - DEBUG - database   - Start creating database connection
2016-09-13 13:15:44,558 - DEBUG - database   - End creating database connection
2016-09-13 13:15:44,574 - DEBUG - sql_routines - pk: ['id']
2016-09-13 13:15:44,574 - DEBUG - sql_routines - pk_part: id
2016-09-13 13:15:44,574 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id AND 
2016-09-13 13:15:44,574 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id AND 
2016-09-13 13:15:44,574 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id
2016-09-13 13:15:44,575 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id
2016-09-13 13:15:44,575 - DEBUG - sql_routines - StageFullCreate - CREATE TABLE palette.s_threadinfo 
 ( 
   host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean
 ) 
2016-09-13 13:15:44,575 - DEBUG - sql_routines - DWHtableCreate - CREATE TABLE palette.h_threadinfo 
" +
                        "( 
" +
                        "  p_id serial,
" +
                        "    host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean,
" +
                        "  p_active_flag character varying(1),
" +
                        "  p_valid_from timestamp without time zone,
" +
                        "  p_valid_to timestamp without time zone 
" +
                        ") " +
                        "WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 13:15:44,575 - DEBUG - sql_routines - DWHviewCreate - CREATE VIEW palette.threadinfo AS 
" +
    							"SELECT 
" +
    							"  host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level
" +
    							"FROM palette.h_threadinfo 
" +
    							"WHERE p_active_flag='Y' 
2016-09-13 13:15:44,575 - DEBUG - sql_routines - DWHtableUpdateSCD - UPDATE palette.h_threadinfo 
" +
                            "SET 
" +
                            "  p_valid_to=('2016-06-08 13:22:15'::timestamp -INTERVAL '1' second)::TIMESTAMP, 
" +
                            "  p_active_flag='N' 
" +
                            "FROM 
" +
                            "( 
" +
                            "  SELECT 
" +
                            "    , 
" +
                            "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                            "      h_threadinfo.host_name, 
  h_threadinfo.process, 
  h_threadinfo.ts, 
  h_threadinfo.pid, 
  h_threadinfo.tid, 
  h_threadinfo.cpu_time, 
  h_threadinfo.poll_cycle_ts, 
  h_threadinfo.start_ts, 
  h_threadinfo.thread_count, 
  h_threadinfo.working_set, 
  h_threadinfo.thread_level,
" +
                            "    h_threadinfo.p_valid_from, 
" +
                            "    h_threadinfo.p_valid_to, 
" +
                            "    h_threadinfo.p_active_flag 
" +
                            "  FROM 
" +
                            "    ( 
" +
                            "      SELECT * 
" +
                            "      FROM palette.h_threadinfo 
" +
                            "      WHERE p_valid_to='21000101'::DATE::TIMESTAMP 
" +
                            "    ) h_threadinfo 
" +
                            "    FULL OUTER JOIN palette.s_threadinfo 
" +
                            "    ON h_threadinfo.id=s_threadinfo.id 
" +
                            ") t 
" +
                            "WHERE 
" +
                            "  h_threadinfo.id=t.id AND 
" +
                            "  h_threadinfo.p_valid_to='21000101'::DATE::TIMESTAMP AND 
" +
                            "  ( 
" +
                            "    t.sql_type='DELETE' OR 
" +
                            "    (t.sql_type='UPDATE' AND is_equal LIKE '%N%') 
" +
                            "  )
2016-09-13 13:15:44,579 - DEBUG - sql_routines - DWHtableInsertSCD - INSERT INTO palette.h_threadinfo 
" +
                                "( 
" +
                              "    host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level,
" +
                              "  p_active_flag,
" +
                              "  p_valid_from,
" +
                              "  p_valid_to
" +
                              ") 
" +
                              "SELECT 
" +
                              "    t.host_name, 
  t.process, 
  t.ts, 
  t.pid, 
  t.tid, 
  t.cpu_time, 
  t.poll_cycle_ts, 
  t.start_ts, 
  t.thread_count, 
  t.working_set, 
  t.thread_level,
" +
                              "  'Y'::VARCHAR(1) p_active_flag, 
" +
                              "   CASE WHEN t.sql_type='INSERT' THEN '10010101'::date::timestamp ELSE '2016-06-08 13:22:15'::TIMESTAMP END p_valid_from ,
" +
                              "  '21000101'::DATE::TIMESTAMP p_valid_to 
" +
                              "FROM 
" +
                              "( 
" +
                              "  SELECT 
" +
                              "    , 
" +
                              "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                              "      s_threadinfo.host_name, 
  s_threadinfo.process, 
  s_threadinfo.ts, 
  s_threadinfo.pid, 
  s_threadinfo.tid, 
  s_threadinfo.cpu_time, 
  s_threadinfo.poll_cycle_ts, 
  s_threadinfo.start_ts, 
  s_threadinfo.thread_count, 
  s_threadinfo.working_set, 
  s_threadinfo.thread_level,
" +
                              "    h_threadinfo.p_valid_from, 
" +
                              "    h_threadinfo.p_valid_to, 
" +
                              "    h_threadinfo.p_active_flag 
" +
                              "  FROM 
" +
                              "    ( 
" +
                              "		select * from ( 
" +
                              "		  select * ,row_number() OVER (PARTITION BY " +pk+" ORDER BY p_valid_from DESC) as p_rn 
" +
                              "		  from palette.h_threadinfo ) tmp_h_threadinfo 
" +
                              "		  WHERE p_rn = 1 
" +

                              "    ) h_threadinfo 
" +
                              "    FULL OUTER JOIN palette.s_threadinfo 
" +
                              "    ON h_threadinfo.id=s_threadinfo.id 
" +
                              ") t 
" +
                              "WHERE 
" +
                              "  t.sql_type='INSERT' OR 
" +
                              "  (t.sql_type='UPDATE' AND is_equal LIKE '%N%')
2016-09-13 13:15:44,581 - FATAL - loadtables - Unhandled exception occurred: list indices must be integers or slices, not str
2016-09-13 13:15:44,587 - DEBUG - database   - Database connection is closed
2016-09-13 13:15:53,117 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 13:15:53,117 - DEBUG - database   - Start creating database connection
2016-09-13 13:15:59,092 - DEBUG - database   - End creating database connection
2016-09-13 13:15:59,108 - DEBUG - sql_routines - pk: ['id']
2016-09-13 13:15:59,109 - DEBUG - sql_routines - pk_part: id
2016-09-13 13:15:59,109 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id AND 
2016-09-13 13:15:59,109 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id AND 
2016-09-13 13:15:59,109 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id
2016-09-13 13:15:59,110 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id
2016-09-13 13:15:59,111 - DEBUG - sql_routines - StageFullCreate - CREATE TABLE palette.s_threadinfo 
 ( 
   host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean
 ) 
2016-09-13 13:15:59,111 - DEBUG - sql_routines - DWHtableCreate - CREATE TABLE palette.h_threadinfo 
" +
                        "( 
" +
                        "  p_id serial,
" +
                        "    host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean,
" +
                        "  p_active_flag character varying(1),
" +
                        "  p_valid_from timestamp without time zone,
" +
                        "  p_valid_to timestamp without time zone 
" +
                        ") " +
                        "WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 13:15:59,111 - DEBUG - sql_routines - DWHviewCreate - CREATE VIEW palette.threadinfo AS 
" +
    							"SELECT 
" +
    							"  host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level
" +
    							"FROM palette.h_threadinfo 
" +
    							"WHERE p_active_flag='Y' 
2016-09-13 13:15:59,111 - DEBUG - sql_routines - DWHtableUpdateSCD - UPDATE palette.h_threadinfo 
" +
                            "SET 
" +
                            "  p_valid_to=('2016-06-08 13:22:15'::timestamp -INTERVAL '1' second)::TIMESTAMP, 
" +
                            "  p_active_flag='N' 
" +
                            "FROM 
" +
                            "( 
" +
                            "  SELECT 
" +
                            "    , 
" +
                            "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                            "      h_threadinfo.host_name, 
  h_threadinfo.process, 
  h_threadinfo.ts, 
  h_threadinfo.pid, 
  h_threadinfo.tid, 
  h_threadinfo.cpu_time, 
  h_threadinfo.poll_cycle_ts, 
  h_threadinfo.start_ts, 
  h_threadinfo.thread_count, 
  h_threadinfo.working_set, 
  h_threadinfo.thread_level,
" +
                            "    h_threadinfo.p_valid_from, 
" +
                            "    h_threadinfo.p_valid_to, 
" +
                            "    h_threadinfo.p_active_flag 
" +
                            "  FROM 
" +
                            "    ( 
" +
                            "      SELECT * 
" +
                            "      FROM palette.h_threadinfo 
" +
                            "      WHERE p_valid_to='21000101'::DATE::TIMESTAMP 
" +
                            "    ) h_threadinfo 
" +
                            "    FULL OUTER JOIN palette.s_threadinfo 
" +
                            "    ON h_threadinfo.id=s_threadinfo.id 
" +
                            ") t 
" +
                            "WHERE 
" +
                            "  h_threadinfo.id=t.id AND 
" +
                            "  h_threadinfo.p_valid_to='21000101'::DATE::TIMESTAMP AND 
" +
                            "  ( 
" +
                            "    t.sql_type='DELETE' OR 
" +
                            "    (t.sql_type='UPDATE' AND is_equal LIKE '%N%') 
" +
                            "  )
2016-09-13 13:15:59,114 - DEBUG - sql_routines - DWHtableInsertSCD - INSERT INTO palette.h_threadinfo 
" +
                                "( 
" +
                              "    host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level,
" +
                              "  p_active_flag,
" +
                              "  p_valid_from,
" +
                              "  p_valid_to
" +
                              ") 
" +
                              "SELECT 
" +
                              "    t.host_name, 
  t.process, 
  t.ts, 
  t.pid, 
  t.tid, 
  t.cpu_time, 
  t.poll_cycle_ts, 
  t.start_ts, 
  t.thread_count, 
  t.working_set, 
  t.thread_level,
" +
                              "  'Y'::VARCHAR(1) p_active_flag, 
" +
                              "   CASE WHEN t.sql_type='INSERT' THEN '10010101'::date::timestamp ELSE '2016-06-08 13:22:15'::TIMESTAMP END p_valid_from ,
" +
                              "  '21000101'::DATE::TIMESTAMP p_valid_to 
" +
                              "FROM 
" +
                              "( 
" +
                              "  SELECT 
" +
                              "    , 
" +
                              "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                              "      s_threadinfo.host_name, 
  s_threadinfo.process, 
  s_threadinfo.ts, 
  s_threadinfo.pid, 
  s_threadinfo.tid, 
  s_threadinfo.cpu_time, 
  s_threadinfo.poll_cycle_ts, 
  s_threadinfo.start_ts, 
  s_threadinfo.thread_count, 
  s_threadinfo.working_set, 
  s_threadinfo.thread_level,
" +
                              "    h_threadinfo.p_valid_from, 
" +
                              "    h_threadinfo.p_valid_to, 
" +
                              "    h_threadinfo.p_active_flag 
" +
                              "  FROM 
" +
                              "    ( 
" +
                              "		select * from ( 
" +
                              "		  select * ,row_number() OVER (PARTITION BY " +pk+" ORDER BY p_valid_from DESC) as p_rn 
" +
                              "		  from palette.h_threadinfo ) tmp_h_threadinfo 
" +
                              "		  WHERE p_rn = 1 
" +

                              "    ) h_threadinfo 
" +
                              "    FULL OUTER JOIN palette.s_threadinfo 
" +
                              "    ON h_threadinfo.id=s_threadinfo.id 
" +
                              ") t 
" +
                              "WHERE 
" +
                              "  t.sql_type='INSERT' OR 
" +
                              "  (t.sql_type='UPDATE' AND is_equal LIKE '%N%')
2016-09-13 13:15:59,115 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 13:15:59,115 - DEBUG - database   - Database connection is closed
2016-09-13 13:18:48,430 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 13:18:48,430 - DEBUG - database   - Start creating database connection
2016-09-13 13:18:49,351 - DEBUG - database   - End creating database connection
2016-09-13 13:18:49,359 - DEBUG - sql_routines - pk: ['id']
2016-09-13 13:18:49,359 - DEBUG - sql_routines - pk_part: id
2016-09-13 13:18:49,359 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id AND 
2016-09-13 13:18:49,359 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id AND 
2016-09-13 13:18:49,359 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id
2016-09-13 13:18:49,360 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id
2016-09-13 13:18:49,360 - FATAL - loadtables - Unhandled exception occurred: 'type' object does not support item assignment
2016-09-13 13:18:49,366 - DEBUG - database   - Database connection is closed
2016-09-13 13:19:01,658 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 13:19:01,658 - DEBUG - database   - Start creating database connection
2016-09-13 13:19:02,553 - DEBUG - database   - End creating database connection
2016-09-13 13:19:02,562 - DEBUG - sql_routines - pk: ['id']
2016-09-13 13:19:02,562 - DEBUG - sql_routines - pk_part: id
2016-09-13 13:19:02,562 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id AND 
2016-09-13 13:19:02,562 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id AND 
2016-09-13 13:19:02,562 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id
2016-09-13 13:19:02,562 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id
2016-09-13 13:19:02,563 - DEBUG - sql_routines - StageFullCreate - CREATE TABLE palette.s_threadinfo 
 ( 
   host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean
 ) 
2016-09-13 13:19:02,563 - DEBUG - sql_routines - DWHtableCreate - CREATE TABLE palette.h_threadinfo 
" +
                        "( 
" +
                        "  p_id serial,
" +
                        "    host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean,
" +
                        "  p_active_flag character varying(1),
" +
                        "  p_valid_from timestamp without time zone,
" +
                        "  p_valid_to timestamp without time zone 
" +
                        ") " +
                        "WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 13:19:02,563 - DEBUG - sql_routines - DWHviewCreate - CREATE VIEW palette.threadinfo AS 
" +
    							"SELECT 
" +
    							"  host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level
" +
    							"FROM palette.h_threadinfo 
" +
    							"WHERE p_active_flag='Y' 
2016-09-13 13:19:02,563 - DEBUG - sql_routines - DWHtableUpdateSCD - UPDATE palette.h_threadinfo 
" +
                            "SET 
" +
                            "  p_valid_to=('2016-06-08 13:22:15'::timestamp -INTERVAL '1' second)::TIMESTAMP, 
" +
                            "  p_active_flag='N' 
" +
                            "FROM 
" +
                            "( 
" +
                            "  SELECT 
" +
                            "    , 
" +
                            "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                            "      h_threadinfo.host_name, 
  h_threadinfo.process, 
  h_threadinfo.ts, 
  h_threadinfo.pid, 
  h_threadinfo.tid, 
  h_threadinfo.cpu_time, 
  h_threadinfo.poll_cycle_ts, 
  h_threadinfo.start_ts, 
  h_threadinfo.thread_count, 
  h_threadinfo.working_set, 
  h_threadinfo.thread_level,
" +
                            "    h_threadinfo.p_valid_from, 
" +
                            "    h_threadinfo.p_valid_to, 
" +
                            "    h_threadinfo.p_active_flag 
" +
                            "  FROM 
" +
                            "    ( 
" +
                            "      SELECT * 
" +
                            "      FROM palette.h_threadinfo 
" +
                            "      WHERE p_valid_to='21000101'::DATE::TIMESTAMP 
" +
                            "    ) h_threadinfo 
" +
                            "    FULL OUTER JOIN palette.s_threadinfo 
" +
                            "    ON h_threadinfo.id=s_threadinfo.id 
" +
                            ") t 
" +
                            "WHERE 
" +
                            "  h_threadinfo.id=t.id AND 
" +
                            "  h_threadinfo.p_valid_to='21000101'::DATE::TIMESTAMP AND 
" +
                            "  ( 
" +
                            "    t.sql_type='DELETE' OR 
" +
                            "    (t.sql_type='UPDATE' AND is_equal LIKE '%N%') 
" +
                            "  )
2016-09-13 13:19:02,564 - DEBUG - sql_routines - DWHtableInsertSCD - INSERT INTO palette.h_threadinfo 
" +
                                "( 
" +
                              "    host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level,
" +
                              "  p_active_flag,
" +
                              "  p_valid_from,
" +
                              "  p_valid_to
" +
                              ") 
" +
                              "SELECT 
" +
                              "    t.host_name, 
  t.process, 
  t.ts, 
  t.pid, 
  t.tid, 
  t.cpu_time, 
  t.poll_cycle_ts, 
  t.start_ts, 
  t.thread_count, 
  t.working_set, 
  t.thread_level,
" +
                              "  'Y'::VARCHAR(1) p_active_flag, 
" +
                              "   CASE WHEN t.sql_type='INSERT' THEN '10010101'::date::timestamp ELSE '2016-06-08 13:22:15'::TIMESTAMP END p_valid_from ,
" +
                              "  '21000101'::DATE::TIMESTAMP p_valid_to 
" +
                              "FROM 
" +
                              "( 
" +
                              "  SELECT 
" +
                              "    , 
" +
                              "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                              "      s_threadinfo.host_name, 
  s_threadinfo.process, 
  s_threadinfo.ts, 
  s_threadinfo.pid, 
  s_threadinfo.tid, 
  s_threadinfo.cpu_time, 
  s_threadinfo.poll_cycle_ts, 
  s_threadinfo.start_ts, 
  s_threadinfo.thread_count, 
  s_threadinfo.working_set, 
  s_threadinfo.thread_level,
" +
                              "    h_threadinfo.p_valid_from, 
" +
                              "    h_threadinfo.p_valid_to, 
" +
                              "    h_threadinfo.p_active_flag 
" +
                              "  FROM 
" +
                              "    ( 
" +
                              "		select * from ( 
" +
                              "		  select * ,row_number() OVER (PARTITION BY " +pk+" ORDER BY p_valid_from DESC) as p_rn 
" +
                              "		  from palette.h_threadinfo ) tmp_h_threadinfo 
" +
                              "		  WHERE p_rn = 1 
" +

                              "    ) h_threadinfo 
" +
                              "    FULL OUTER JOIN palette.s_threadinfo 
" +
                              "    ON h_threadinfo.id=s_threadinfo.id 
" +
                              ") t 
" +
                              "WHERE 
" +
                              "  t.sql_type='INSERT' OR 
" +
                              "  (t.sql_type='UPDATE' AND is_equal LIKE '%N%')
2016-09-13 13:19:02,566 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 13:19:02,566 - DEBUG - database   - Database connection is closed
2016-09-13 13:19:18,907 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 13:19:18,907 - DEBUG - database   - Start creating database connection
2016-09-13 13:19:19,813 - DEBUG - database   - End creating database connection
2016-09-13 13:19:19,831 - DEBUG - sql_routines - pk: ['id']
2016-09-13 13:19:19,831 - DEBUG - sql_routines - pk_part: id
2016-09-13 13:19:19,831 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id AND 
2016-09-13 13:19:19,831 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id AND 
2016-09-13 13:19:19,832 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id
2016-09-13 13:19:19,832 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id
2016-09-13 13:19:19,833 - DEBUG - sql_routines - StageFullCreate - CREATE TABLE palette.s_threadinfo 
 ( 
   host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean
 ) 
2016-09-13 13:19:19,833 - DEBUG - sql_routines - DWHtableCreate - CREATE TABLE palette.h_threadinfo 
" +
                        "( 
" +
                        "  p_id serial,
" +
                        "    host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean,
" +
                        "  p_active_flag character varying(1),
" +
                        "  p_valid_from timestamp without time zone,
" +
                        "  p_valid_to timestamp without time zone 
" +
                        ") " +
                        "WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 13:19:19,834 - DEBUG - sql_routines - DWHviewCreate - CREATE VIEW palette.threadinfo AS 
" +
    							"SELECT 
" +
    							"  host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level
" +
    							"FROM palette.h_threadinfo 
" +
    							"WHERE p_active_flag='Y' 
2016-09-13 13:19:19,834 - DEBUG - sql_routines - DWHtableUpdateSCD - UPDATE palette.h_threadinfo 
" +
                            "SET 
" +
                            "  p_valid_to=('2016-06-08 13:22:15'::timestamp -INTERVAL '1' second)::TIMESTAMP, 
" +
                            "  p_active_flag='N' 
" +
                            "FROM 
" +
                            "( 
" +
                            "  SELECT 
" +
                            "    , 
" +
                            "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                            "      h_threadinfo.host_name, 
  h_threadinfo.process, 
  h_threadinfo.ts, 
  h_threadinfo.pid, 
  h_threadinfo.tid, 
  h_threadinfo.cpu_time, 
  h_threadinfo.poll_cycle_ts, 
  h_threadinfo.start_ts, 
  h_threadinfo.thread_count, 
  h_threadinfo.working_set, 
  h_threadinfo.thread_level,
" +
                            "    h_threadinfo.p_valid_from, 
" +
                            "    h_threadinfo.p_valid_to, 
" +
                            "    h_threadinfo.p_active_flag 
" +
                            "  FROM 
" +
                            "    ( 
" +
                            "      SELECT * 
" +
                            "      FROM palette.h_threadinfo 
" +
                            "      WHERE p_valid_to='21000101'::DATE::TIMESTAMP 
" +
                            "    ) h_threadinfo 
" +
                            "    FULL OUTER JOIN palette.s_threadinfo 
" +
                            "    ON h_threadinfo.id=s_threadinfo.id 
" +
                            ") t 
" +
                            "WHERE 
" +
                            "  h_threadinfo.id=t.id AND 
" +
                            "  h_threadinfo.p_valid_to='21000101'::DATE::TIMESTAMP AND 
" +
                            "  ( 
" +
                            "    t.sql_type='DELETE' OR 
" +
                            "    (t.sql_type='UPDATE' AND is_equal LIKE '%N%') 
" +
                            "  )
2016-09-13 13:19:19,835 - DEBUG - sql_routines - DWHtableInsertSCD - INSERT INTO palette.h_threadinfo 
" +
                                "( 
" +
                              "    host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level,
" +
                              "  p_active_flag,
" +
                              "  p_valid_from,
" +
                              "  p_valid_to
" +
                              ") 
" +
                              "SELECT 
" +
                              "    t.host_name, 
  t.process, 
  t.ts, 
  t.pid, 
  t.tid, 
  t.cpu_time, 
  t.poll_cycle_ts, 
  t.start_ts, 
  t.thread_count, 
  t.working_set, 
  t.thread_level,
" +
                              "  'Y'::VARCHAR(1) p_active_flag, 
" +
                              "   CASE WHEN t.sql_type='INSERT' THEN '10010101'::date::timestamp ELSE '2016-06-08 13:22:15'::TIMESTAMP END p_valid_from ,
" +
                              "  '21000101'::DATE::TIMESTAMP p_valid_to 
" +
                              "FROM 
" +
                              "( 
" +
                              "  SELECT 
" +
                              "    , 
" +
                              "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                              "      s_threadinfo.host_name, 
  s_threadinfo.process, 
  s_threadinfo.ts, 
  s_threadinfo.pid, 
  s_threadinfo.tid, 
  s_threadinfo.cpu_time, 
  s_threadinfo.poll_cycle_ts, 
  s_threadinfo.start_ts, 
  s_threadinfo.thread_count, 
  s_threadinfo.working_set, 
  s_threadinfo.thread_level,
" +
                              "    h_threadinfo.p_valid_from, 
" +
                              "    h_threadinfo.p_valid_to, 
" +
                              "    h_threadinfo.p_active_flag 
" +
                              "  FROM 
" +
                              "    ( 
" +
                              "		select * from ( 
" +
                              "		  select * ,row_number() OVER (PARTITION BY " +pk+" ORDER BY p_valid_from DESC) as p_rn 
" +
                              "		  from palette.h_threadinfo ) tmp_h_threadinfo 
" +
                              "		  WHERE p_rn = 1 
" +

                              "    ) h_threadinfo 
" +
                              "    FULL OUTER JOIN palette.s_threadinfo 
" +
                              "    ON h_threadinfo.id=s_threadinfo.id 
" +
                              ") t 
" +
                              "WHERE 
" +
                              "  t.sql_type='INSERT' OR 
" +
                              "  (t.sql_type='UPDATE' AND is_equal LIKE '%N%')
2016-09-13 13:19:19,836 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 13:19:19,836 - DEBUG - database   - Database connection is closed
2016-09-13 13:22:01,000 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 13:22:01,000 - DEBUG - database   - Start creating database connection
2016-09-13 13:22:01,995 - DEBUG - database   - End creating database connection
2016-09-13 13:22:02,012 - DEBUG - sql_routines - pk: ['id']
2016-09-13 13:22:02,012 - DEBUG - sql_routines - pk_part: id
2016-09-13 13:22:02,012 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id AND 
2016-09-13 13:22:02,014 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id AND 
2016-09-13 13:22:02,014 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id
2016-09-13 13:22:02,014 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id
2016-09-13 13:22:02,016 - DEBUG - sql_routines - StageFullCreate - CREATE TABLE palette.s_threadinfo 
 ( 
   host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean
 ) 
2016-09-13 13:22:02,016 - DEBUG - sql_routines - DWHtableCreate - CREATE TABLE palette.h_threadinfo 
" +
                        "( 
" +
                        "  p_id serial,
" +
                        "    host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean,
" +
                        "  p_active_flag character varying(1),
" +
                        "  p_valid_from timestamp without time zone,
" +
                        "  p_valid_to timestamp without time zone 
" +
                        ") " +
                        "WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 13:22:02,016 - DEBUG - sql_routines - DWHviewCreate - CREATE VIEW palette.threadinfo AS 
" +
    							"SELECT 
" +
    							"  host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level
" +
    							"FROM palette.h_threadinfo 
" +
    							"WHERE p_active_flag='Y' 
2016-09-13 13:22:02,017 - DEBUG - sql_routines - DWHtableUpdateSCD - UPDATE palette.h_threadinfo 
" +
                            "SET 
" +
                            "  p_valid_to=('2016-06-08 13:22:15'::timestamp -INTERVAL '1' second)::TIMESTAMP, 
" +
                            "  p_active_flag='N' 
" +
                            "FROM 
" +
                            "( 
" +
                            "  SELECT 
" +
                            "    , 
" +
                            "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                            "      h_threadinfo.host_name, 
  h_threadinfo.process, 
  h_threadinfo.ts, 
  h_threadinfo.pid, 
  h_threadinfo.tid, 
  h_threadinfo.cpu_time, 
  h_threadinfo.poll_cycle_ts, 
  h_threadinfo.start_ts, 
  h_threadinfo.thread_count, 
  h_threadinfo.working_set, 
  h_threadinfo.thread_level,
" +
                            "    h_threadinfo.p_valid_from, 
" +
                            "    h_threadinfo.p_valid_to, 
" +
                            "    h_threadinfo.p_active_flag 
" +
                            "  FROM 
" +
                            "    ( 
" +
                            "      SELECT * 
" +
                            "      FROM palette.h_threadinfo 
" +
                            "      WHERE p_valid_to='21000101'::DATE::TIMESTAMP 
" +
                            "    ) h_threadinfo 
" +
                            "    FULL OUTER JOIN palette.s_threadinfo 
" +
                            "    ON h_threadinfo.id=s_threadinfo.id 
" +
                            ") t 
" +
                            "WHERE 
" +
                            "  h_threadinfo.id=t.id AND 
" +
                            "  h_threadinfo.p_valid_to='21000101'::DATE::TIMESTAMP AND 
" +
                            "  ( 
" +
                            "    t.sql_type='DELETE' OR 
" +
                            "    (t.sql_type='UPDATE' AND is_equal LIKE '%N%') 
" +
                            "  )
2016-09-13 13:22:02,018 - DEBUG - sql_routines - DWHtableInsertSCD - INSERT INTO palette.h_threadinfo 
" +
                                "( 
" +
                              "    host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level,
" +
                              "  p_active_flag,
" +
                              "  p_valid_from,
" +
                              "  p_valid_to
" +
                              ") 
" +
                              "SELECT 
" +
                              "    t.host_name, 
  t.process, 
  t.ts, 
  t.pid, 
  t.tid, 
  t.cpu_time, 
  t.poll_cycle_ts, 
  t.start_ts, 
  t.thread_count, 
  t.working_set, 
  t.thread_level,
" +
                              "  'Y'::VARCHAR(1) p_active_flag, 
" +
                              "   CASE WHEN t.sql_type='INSERT' THEN '10010101'::date::timestamp ELSE '2016-06-08 13:22:15'::TIMESTAMP END p_valid_from ,
" +
                              "  '21000101'::DATE::TIMESTAMP p_valid_to 
" +
                              "FROM 
" +
                              "( 
" +
                              "  SELECT 
" +
                              "    , 
" +
                              "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                              "      s_threadinfo.host_name, 
  s_threadinfo.process, 
  s_threadinfo.ts, 
  s_threadinfo.pid, 
  s_threadinfo.tid, 
  s_threadinfo.cpu_time, 
  s_threadinfo.poll_cycle_ts, 
  s_threadinfo.start_ts, 
  s_threadinfo.thread_count, 
  s_threadinfo.working_set, 
  s_threadinfo.thread_level,
" +
                              "    h_threadinfo.p_valid_from, 
" +
                              "    h_threadinfo.p_valid_to, 
" +
                              "    h_threadinfo.p_active_flag 
" +
                              "  FROM 
" +
                              "    ( 
" +
                              "		select * from ( 
" +
                              "		  select * ,row_number() OVER (PARTITION BY " +pk+" ORDER BY p_valid_from DESC) as p_rn 
" +
                              "		  from palette.h_threadinfo ) tmp_h_threadinfo 
" +
                              "		  WHERE p_rn = 1 
" +

                              "    ) h_threadinfo 
" +
                              "    FULL OUTER JOIN palette.s_threadinfo 
" +
                              "    ON h_threadinfo.id=s_threadinfo.id 
" +
                              ") t 
" +
                              "WHERE 
" +
                              "  t.sql_type='INSERT' OR 
" +
                              "  (t.sql_type='UPDATE' AND is_equal LIKE '%N%')
2016-09-13 13:22:02,020 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 13:22:02,020 - DEBUG - database   - Database connection is closed
2016-09-13 13:23:17,511 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 13:23:17,511 - DEBUG - database   - Start creating database connection
2016-09-13 13:23:18,415 - DEBUG - database   - End creating database connection
2016-09-13 13:23:18,425 - DEBUG - sql_routines - pk: ['id']
2016-09-13 13:23:18,425 - DEBUG - sql_routines - pk_part: id
2016-09-13 13:23:18,426 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id AND 
2016-09-13 13:23:18,426 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id AND 
2016-09-13 13:23:18,426 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id
2016-09-13 13:23:18,426 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id
2016-09-13 13:23:18,427 - DEBUG - sql_routines - StageFullCreate - CREATE TABLE palette.s_threadinfo 
 ( 
   host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean
 ) 
2016-09-13 13:23:18,428 - DEBUG - sql_routines - DWHtableCreate - CREATE TABLE palette.h_threadinfo 
"
                        "( 
"
                        "  p_id serial,
"
                        "    host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean,
" 
                        "  p_active_flag character varying(1),
"
                        "  p_valid_from timestamp without time zone,
"
                        "  p_valid_to timestamp without time zone 
"
                        ") "
                        "WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 13:23:18,428 - DEBUG - sql_routines - DWHviewCreate - CREATE VIEW palette.threadinfo AS 
" +
    							"SELECT 
" +
    							"  host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level
" +
    							"FROM palette.h_threadinfo 
" +
    							"WHERE p_active_flag='Y' 
2016-09-13 13:23:18,428 - DEBUG - sql_routines - DWHtableUpdateSCD - UPDATE palette.h_threadinfo 
" +
                            "SET 
" +
                            "  p_valid_to=('2016-06-08 13:22:15'::timestamp -INTERVAL '1' second)::TIMESTAMP, 
" +
                            "  p_active_flag='N' 
" +
                            "FROM 
" +
                            "( 
" +
                            "  SELECT 
" +
                            "    , 
" +
                            "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                            "      h_threadinfo.host_name, 
  h_threadinfo.process, 
  h_threadinfo.ts, 
  h_threadinfo.pid, 
  h_threadinfo.tid, 
  h_threadinfo.cpu_time, 
  h_threadinfo.poll_cycle_ts, 
  h_threadinfo.start_ts, 
  h_threadinfo.thread_count, 
  h_threadinfo.working_set, 
  h_threadinfo.thread_level,
" +
                            "    h_threadinfo.p_valid_from, 
" +
                            "    h_threadinfo.p_valid_to, 
" +
                            "    h_threadinfo.p_active_flag 
" +
                            "  FROM 
" +
                            "    ( 
" +
                            "      SELECT * 
" +
                            "      FROM palette.h_threadinfo 
" +
                            "      WHERE p_valid_to='21000101'::DATE::TIMESTAMP 
" +
                            "    ) h_threadinfo 
" +
                            "    FULL OUTER JOIN palette.s_threadinfo 
" +
                            "    ON h_threadinfo.id=s_threadinfo.id 
" +
                            ") t 
" +
                            "WHERE 
" +
                            "  h_threadinfo.id=t.id AND 
" +
                            "  h_threadinfo.p_valid_to='21000101'::DATE::TIMESTAMP AND 
" +
                            "  ( 
" +
                            "    t.sql_type='DELETE' OR 
" +
                            "    (t.sql_type='UPDATE' AND is_equal LIKE '%N%') 
" +
                            "  )
2016-09-13 13:23:18,429 - DEBUG - sql_routines - DWHtableInsertSCD - INSERT INTO palette.h_threadinfo 
" +
                                "( 
" +
                              "    host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level,
" +
                              "  p_active_flag,
" +
                              "  p_valid_from,
" +
                              "  p_valid_to
" +
                              ") 
" +
                              "SELECT 
" +
                              "    t.host_name, 
  t.process, 
  t.ts, 
  t.pid, 
  t.tid, 
  t.cpu_time, 
  t.poll_cycle_ts, 
  t.start_ts, 
  t.thread_count, 
  t.working_set, 
  t.thread_level,
" +
                              "  'Y'::VARCHAR(1) p_active_flag, 
" +
                              "   CASE WHEN t.sql_type='INSERT' THEN '10010101'::date::timestamp ELSE '2016-06-08 13:22:15'::TIMESTAMP END p_valid_from ,
" +
                              "  '21000101'::DATE::TIMESTAMP p_valid_to 
" +
                              "FROM 
" +
                              "( 
" +
                              "  SELECT 
" +
                              "    , 
" +
                              "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                              "      s_threadinfo.host_name, 
  s_threadinfo.process, 
  s_threadinfo.ts, 
  s_threadinfo.pid, 
  s_threadinfo.tid, 
  s_threadinfo.cpu_time, 
  s_threadinfo.poll_cycle_ts, 
  s_threadinfo.start_ts, 
  s_threadinfo.thread_count, 
  s_threadinfo.working_set, 
  s_threadinfo.thread_level,
" +
                              "    h_threadinfo.p_valid_from, 
" +
                              "    h_threadinfo.p_valid_to, 
" +
                              "    h_threadinfo.p_active_flag 
" +
                              "  FROM 
" +
                              "    ( 
" +
                              "		select * from ( 
" +
                              "		  select * ,row_number() OVER (PARTITION BY " +pk+" ORDER BY p_valid_from DESC) as p_rn 
" +
                              "		  from palette.h_threadinfo ) tmp_h_threadinfo 
" +
                              "		  WHERE p_rn = 1 
" +

                              "    ) h_threadinfo 
" +
                              "    FULL OUTER JOIN palette.s_threadinfo 
" +
                              "    ON h_threadinfo.id=s_threadinfo.id 
" +
                              ") t 
" +
                              "WHERE 
" +
                              "  t.sql_type='INSERT' OR 
" +
                              "  (t.sql_type='UPDATE' AND is_equal LIKE '%N%')
2016-09-13 13:23:18,430 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 13:23:18,430 - DEBUG - database   - Database connection is closed
2016-09-13 13:23:41,146 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 13:23:41,146 - DEBUG - database   - Start creating database connection
2016-09-13 13:23:42,038 - DEBUG - database   - End creating database connection
2016-09-13 13:23:42,051 - DEBUG - sql_routines - pk: ['id']
2016-09-13 13:23:42,051 - DEBUG - sql_routines - pk_part: id
2016-09-13 13:23:42,051 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id AND 
2016-09-13 13:23:42,051 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id AND 
2016-09-13 13:23:42,051 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id
2016-09-13 13:23:42,051 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id
2016-09-13 13:23:42,052 - DEBUG - sql_routines - StageFullCreate - CREATE TABLE palette.s_threadinfo 
 ( 
   host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean
 ) 
2016-09-13 13:23:42,052 - DEBUG - sql_routines - DWHtableCreate - CREATE TABLE palette.h_threadinfo 

                        ( 

                          p_id serial,

                            host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean,

                          p_active_flag character varying(1),

                          p_valid_from timestamp without time zone,

                          p_valid_to timestamp without time zone 

                        )
                        WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 13:23:42,052 - DEBUG - sql_routines - DWHviewCreate - CREATE VIEW palette.threadinfo AS 
" +
    							"SELECT 
" +
    							"  host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level
" +
    							"FROM palette.h_threadinfo 
" +
    							"WHERE p_active_flag='Y' 
2016-09-13 13:23:42,052 - DEBUG - sql_routines - DWHtableUpdateSCD - UPDATE palette.h_threadinfo 
" +
                            "SET 
" +
                            "  p_valid_to=('2016-06-08 13:22:15'::timestamp -INTERVAL '1' second)::TIMESTAMP, 
" +
                            "  p_active_flag='N' 
" +
                            "FROM 
" +
                            "( 
" +
                            "  SELECT 
" +
                            "    , 
" +
                            "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                            "      h_threadinfo.host_name, 
  h_threadinfo.process, 
  h_threadinfo.ts, 
  h_threadinfo.pid, 
  h_threadinfo.tid, 
  h_threadinfo.cpu_time, 
  h_threadinfo.poll_cycle_ts, 
  h_threadinfo.start_ts, 
  h_threadinfo.thread_count, 
  h_threadinfo.working_set, 
  h_threadinfo.thread_level,
" +
                            "    h_threadinfo.p_valid_from, 
" +
                            "    h_threadinfo.p_valid_to, 
" +
                            "    h_threadinfo.p_active_flag 
" +
                            "  FROM 
" +
                            "    ( 
" +
                            "      SELECT * 
" +
                            "      FROM palette.h_threadinfo 
" +
                            "      WHERE p_valid_to='21000101'::DATE::TIMESTAMP 
" +
                            "    ) h_threadinfo 
" +
                            "    FULL OUTER JOIN palette.s_threadinfo 
" +
                            "    ON h_threadinfo.id=s_threadinfo.id 
" +
                            ") t 
" +
                            "WHERE 
" +
                            "  h_threadinfo.id=t.id AND 
" +
                            "  h_threadinfo.p_valid_to='21000101'::DATE::TIMESTAMP AND 
" +
                            "  ( 
" +
                            "    t.sql_type='DELETE' OR 
" +
                            "    (t.sql_type='UPDATE' AND is_equal LIKE '%N%') 
" +
                            "  )
2016-09-13 13:23:42,054 - DEBUG - sql_routines - DWHtableInsertSCD - INSERT INTO palette.h_threadinfo 
" +
                                "( 
" +
                              "    host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level,
" +
                              "  p_active_flag,
" +
                              "  p_valid_from,
" +
                              "  p_valid_to
" +
                              ") 
" +
                              "SELECT 
" +
                              "    t.host_name, 
  t.process, 
  t.ts, 
  t.pid, 
  t.tid, 
  t.cpu_time, 
  t.poll_cycle_ts, 
  t.start_ts, 
  t.thread_count, 
  t.working_set, 
  t.thread_level,
" +
                              "  'Y'::VARCHAR(1) p_active_flag, 
" +
                              "   CASE WHEN t.sql_type='INSERT' THEN '10010101'::date::timestamp ELSE '2016-06-08 13:22:15'::TIMESTAMP END p_valid_from ,
" +
                              "  '21000101'::DATE::TIMESTAMP p_valid_to 
" +
                              "FROM 
" +
                              "( 
" +
                              "  SELECT 
" +
                              "    , 
" +
                              "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                              "      s_threadinfo.host_name, 
  s_threadinfo.process, 
  s_threadinfo.ts, 
  s_threadinfo.pid, 
  s_threadinfo.tid, 
  s_threadinfo.cpu_time, 
  s_threadinfo.poll_cycle_ts, 
  s_threadinfo.start_ts, 
  s_threadinfo.thread_count, 
  s_threadinfo.working_set, 
  s_threadinfo.thread_level,
" +
                              "    h_threadinfo.p_valid_from, 
" +
                              "    h_threadinfo.p_valid_to, 
" +
                              "    h_threadinfo.p_active_flag 
" +
                              "  FROM 
" +
                              "    ( 
" +
                              "		select * from ( 
" +
                              "		  select * ,row_number() OVER (PARTITION BY " +pk+" ORDER BY p_valid_from DESC) as p_rn 
" +
                              "		  from palette.h_threadinfo ) tmp_h_threadinfo 
" +
                              "		  WHERE p_rn = 1 
" +

                              "    ) h_threadinfo 
" +
                              "    FULL OUTER JOIN palette.s_threadinfo 
" +
                              "    ON h_threadinfo.id=s_threadinfo.id 
" +
                              ") t 
" +
                              "WHERE 
" +
                              "  t.sql_type='INSERT' OR 
" +
                              "  (t.sql_type='UPDATE' AND is_equal LIKE '%N%')
2016-09-13 13:23:42,056 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 13:23:42,056 - DEBUG - database   - Database connection is closed
2016-09-13 13:24:56,691 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 13:24:56,692 - DEBUG - database   - Start creating database connection
2016-09-13 13:24:57,589 - DEBUG - database   - End creating database connection
2016-09-13 13:24:57,601 - DEBUG - sql_routines - pk: ['id']
2016-09-13 13:24:57,601 - DEBUG - sql_routines - pk_part: id
2016-09-13 13:24:57,601 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id AND 
2016-09-13 13:24:57,601 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id AND 
2016-09-13 13:24:57,602 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id
2016-09-13 13:24:57,602 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id
2016-09-13 13:24:57,603 - DEBUG - sql_routines - StageFullCreate - CREATE TABLE palette.s_threadinfo 
 ( 
   host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean
 ) 
2016-09-13 13:24:57,603 - DEBUG - sql_routines - DWHtableCreate - CREATE TABLE palette.h_threadinfo 

                        ( 

                          p_id serial,

                            host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean,

                          p_active_flag character varying(1),

                          p_valid_from timestamp without time zone,

                          p_valid_to timestamp without time zone 

                        )
                        WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 13:24:57,604 - DEBUG - sql_routines - DWHviewCreate - CREATE VIEW palette.threadinfo AS 

    							SELECT 

    							  host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level

    							FROM palette.h_threadinfo 

    							WHERE p_active_flag='Y' 
2016-09-13 13:24:57,604 - DEBUG - sql_routines - DWHtableUpdateSCD - UPDATE palette.h_threadinfo 
" +
                            "SET 
" +
                            "  p_valid_to=('2016-06-08 13:22:15'::timestamp -INTERVAL '1' second)::TIMESTAMP, 
" +
                            "  p_active_flag='N' 
" +
                            "FROM 
" +
                            "( 
" +
                            "  SELECT 
" +
                            "    , 
" +
                            "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                            "      h_threadinfo.host_name, 
  h_threadinfo.process, 
  h_threadinfo.ts, 
  h_threadinfo.pid, 
  h_threadinfo.tid, 
  h_threadinfo.cpu_time, 
  h_threadinfo.poll_cycle_ts, 
  h_threadinfo.start_ts, 
  h_threadinfo.thread_count, 
  h_threadinfo.working_set, 
  h_threadinfo.thread_level,
" +
                            "    h_threadinfo.p_valid_from, 
" +
                            "    h_threadinfo.p_valid_to, 
" +
                            "    h_threadinfo.p_active_flag 
" +
                            "  FROM 
" +
                            "    ( 
" +
                            "      SELECT * 
" +
                            "      FROM palette.h_threadinfo 
" +
                            "      WHERE p_valid_to='21000101'::DATE::TIMESTAMP 
" +
                            "    ) h_threadinfo 
" +
                            "    FULL OUTER JOIN palette.s_threadinfo 
" +
                            "    ON h_threadinfo.id=s_threadinfo.id 
" +
                            ") t 
" +
                            "WHERE 
" +
                            "  h_threadinfo.id=t.id AND 
" +
                            "  h_threadinfo.p_valid_to='21000101'::DATE::TIMESTAMP AND 
" +
                            "  ( 
" +
                            "    t.sql_type='DELETE' OR 
" +
                            "    (t.sql_type='UPDATE' AND is_equal LIKE '%N%') 
" +
                            "  )
2016-09-13 13:24:57,606 - DEBUG - sql_routines - DWHtableInsertSCD - INSERT INTO palette.h_threadinfo 
" +
                                "( 
" +
                              "    host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level,
" +
                              "  p_active_flag,
" +
                              "  p_valid_from,
" +
                              "  p_valid_to
" +
                              ") 
" +
                              "SELECT 
" +
                              "    t.host_name, 
  t.process, 
  t.ts, 
  t.pid, 
  t.tid, 
  t.cpu_time, 
  t.poll_cycle_ts, 
  t.start_ts, 
  t.thread_count, 
  t.working_set, 
  t.thread_level,
" +
                              "  'Y'::VARCHAR(1) p_active_flag, 
" +
                              "   CASE WHEN t.sql_type='INSERT' THEN '10010101'::date::timestamp ELSE '2016-06-08 13:22:15'::TIMESTAMP END p_valid_from ,
" +
                              "  '21000101'::DATE::TIMESTAMP p_valid_to 
" +
                              "FROM 
" +
                              "( 
" +
                              "  SELECT 
" +
                              "    , 
" +
                              "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                              "      s_threadinfo.host_name, 
  s_threadinfo.process, 
  s_threadinfo.ts, 
  s_threadinfo.pid, 
  s_threadinfo.tid, 
  s_threadinfo.cpu_time, 
  s_threadinfo.poll_cycle_ts, 
  s_threadinfo.start_ts, 
  s_threadinfo.thread_count, 
  s_threadinfo.working_set, 
  s_threadinfo.thread_level,
" +
                              "    h_threadinfo.p_valid_from, 
" +
                              "    h_threadinfo.p_valid_to, 
" +
                              "    h_threadinfo.p_active_flag 
" +
                              "  FROM 
" +
                              "    ( 
" +
                              "		select * from ( 
" +
                              "		  select * ,row_number() OVER (PARTITION BY " +pk+" ORDER BY p_valid_from DESC) as p_rn 
" +
                              "		  from palette.h_threadinfo ) tmp_h_threadinfo 
" +
                              "		  WHERE p_rn = 1 
" +

                              "    ) h_threadinfo 
" +
                              "    FULL OUTER JOIN palette.s_threadinfo 
" +
                              "    ON h_threadinfo.id=s_threadinfo.id 
" +
                              ") t 
" +
                              "WHERE 
" +
                              "  t.sql_type='INSERT' OR 
" +
                              "  (t.sql_type='UPDATE' AND is_equal LIKE '%N%')
2016-09-13 13:24:57,608 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 13:24:57,609 - DEBUG - database   - Database connection is closed
2016-09-13 13:26:05,643 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 13:26:05,644 - DEBUG - database   - Start creating database connection
2016-09-13 13:26:06,630 - DEBUG - database   - End creating database connection
2016-09-13 13:26:06,639 - DEBUG - sql_routines - pk: ['id']
2016-09-13 13:26:06,639 - DEBUG - sql_routines - pk_part: id
2016-09-13 13:26:06,639 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id AND 
2016-09-13 13:26:06,639 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id AND 
2016-09-13 13:26:06,640 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id
2016-09-13 13:26:06,640 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id
2016-09-13 13:26:06,640 - DEBUG - sql_routines - StageFullCreate - CREATE TABLE palette.s_threadinfo 
 ( 
   host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean
 ) 
2016-09-13 13:26:06,641 - DEBUG - sql_routines - DWHtableCreate - CREATE TABLE palette.h_threadinfo 

                        ( 

                          p_id serial,

                            host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean,

                          p_active_flag character varying(1),

                          p_valid_from timestamp without time zone,

                          p_valid_to timestamp without time zone 

                        )
                        WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 13:26:06,641 - DEBUG - sql_routines - DWHviewCreate - CREATE VIEW palette.threadinfo AS 

    							SELECT 

    							  host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level

    							FROM palette.h_threadinfo 

    							WHERE p_active_flag='Y' 
2016-09-13 13:26:06,641 - DEBUG - sql_routines - DWHtableUpdateSCD - UPDATE palette.h_threadinfo 

                            SET 
"
                              p_valid_to=('2016-06-08 13:22:15'::timestamp -INTERVAL '1' second)::TIMESTAMP, 

                              p_active_flag='N' 

                            FROM 

                            ( 

                              SELECT 

                                , 

                                CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 

                                  h_threadinfo.host_name, 
  h_threadinfo.process, 
  h_threadinfo.ts, 
  h_threadinfo.pid, 
  h_threadinfo.tid, 
  h_threadinfo.cpu_time, 
  h_threadinfo.poll_cycle_ts, 
  h_threadinfo.start_ts, 
  h_threadinfo.thread_count, 
  h_threadinfo.working_set, 
  h_threadinfo.thread_level,

                                h_threadinfo.p_valid_from, 

                                h_threadinfo.p_valid_to, 

                                h_threadinfo.p_active_flag 

                              FROM 

                                ( 

                                  SELECT * 

                                  FROM palette.h_threadinfo 

                                  WHERE p_valid_to='21000101'::DATE::TIMESTAMP 

                                ) h_threadinfo 

                                FULL OUTER JOIN palette.s_threadinfo 

                                ON h_threadinfo.id=s_threadinfo.id 

                            ) t 

                            WHERE 

                              h_threadinfo.id=t.id AND 

                              h_threadinfo.p_valid_to='21000101'::DATE::TIMESTAMP AND 

                              ( 

                                t.sql_type='DELETE' OR 

                                (t.sql_type='UPDATE' AND is_equal LIKE '%N%') 

                              )
2016-09-13 13:26:06,642 - DEBUG - sql_routines - DWHtableInsertSCD - INSERT INTO palette.h_threadinfo 
" +
                                "( 
" +
                              "    host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level,
" +
                              "  p_active_flag,
" +
                              "  p_valid_from,
" +
                              "  p_valid_to
" +
                              ") 
" +
                              "SELECT 
" +
                              "    t.host_name, 
  t.process, 
  t.ts, 
  t.pid, 
  t.tid, 
  t.cpu_time, 
  t.poll_cycle_ts, 
  t.start_ts, 
  t.thread_count, 
  t.working_set, 
  t.thread_level,
" +
                              "  'Y'::VARCHAR(1) p_active_flag, 
" +
                              "   CASE WHEN t.sql_type='INSERT' THEN '10010101'::date::timestamp ELSE '2016-06-08 13:22:15'::TIMESTAMP END p_valid_from ,
" +
                              "  '21000101'::DATE::TIMESTAMP p_valid_to 
" +
                              "FROM 
" +
                              "( 
" +
                              "  SELECT 
" +
                              "    , 
" +
                              "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                              "      s_threadinfo.host_name, 
  s_threadinfo.process, 
  s_threadinfo.ts, 
  s_threadinfo.pid, 
  s_threadinfo.tid, 
  s_threadinfo.cpu_time, 
  s_threadinfo.poll_cycle_ts, 
  s_threadinfo.start_ts, 
  s_threadinfo.thread_count, 
  s_threadinfo.working_set, 
  s_threadinfo.thread_level,
" +
                              "    h_threadinfo.p_valid_from, 
" +
                              "    h_threadinfo.p_valid_to, 
" +
                              "    h_threadinfo.p_active_flag 
" +
                              "  FROM 
" +
                              "    ( 
" +
                              "		select * from ( 
" +
                              "		  select * ,row_number() OVER (PARTITION BY " +pk+" ORDER BY p_valid_from DESC) as p_rn 
" +
                              "		  from palette.h_threadinfo ) tmp_h_threadinfo 
" +
                              "		  WHERE p_rn = 1 
" +

                              "    ) h_threadinfo 
" +
                              "    FULL OUTER JOIN palette.s_threadinfo 
" +
                              "    ON h_threadinfo.id=s_threadinfo.id 
" +
                              ") t 
" +
                              "WHERE 
" +
                              "  t.sql_type='INSERT' OR 
" +
                              "  (t.sql_type='UPDATE' AND is_equal LIKE '%N%')
2016-09-13 13:26:06,643 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 13:26:06,643 - DEBUG - database   - Database connection is closed
2016-09-13 13:27:15,293 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 13:27:15,293 - DEBUG - database   - Start creating database connection
2016-09-13 13:27:16,234 - DEBUG - database   - End creating database connection
2016-09-13 13:27:16,253 - DEBUG - sql_routines - pk: ['id']
2016-09-13 13:27:16,253 - DEBUG - sql_routines - pk_part: id
2016-09-13 13:27:16,254 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id AND 
2016-09-13 13:27:16,254 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id AND 
2016-09-13 13:27:16,254 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id
2016-09-13 13:27:16,254 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id
2016-09-13 13:27:16,255 - DEBUG - sql_routines - StageFullCreate - CREATE TABLE palette.s_threadinfo 
 ( 
   host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean
 ) 
2016-09-13 13:27:16,256 - DEBUG - sql_routines - DWHtableCreate - CREATE TABLE palette.h_threadinfo 

                        ( 

                          p_id serial,

                            host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean,

                          p_active_flag character varying(1),

                          p_valid_from timestamp without time zone,

                          p_valid_to timestamp without time zone 

                        )
                        WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 13:27:16,256 - DEBUG - sql_routines - DWHviewCreate - CREATE VIEW palette.threadinfo AS 

    							SELECT 

    							  host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level

    							FROM palette.h_threadinfo 

    							WHERE p_active_flag='Y' 
2016-09-13 13:27:16,256 - DEBUG - sql_routines - DWHtableUpdateSCD - UPDATE palette.h_threadinfo 

                            SET 

                              p_valid_to=('2016-06-08 13:22:15'::timestamp -INTERVAL '1' second)::TIMESTAMP, 

                              p_active_flag='N' 

                            FROM 

                            ( 

                              SELECT 

                                , 

                                CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 

                                  h_threadinfo.host_name, 
  h_threadinfo.process, 
  h_threadinfo.ts, 
  h_threadinfo.pid, 
  h_threadinfo.tid, 
  h_threadinfo.cpu_time, 
  h_threadinfo.poll_cycle_ts, 
  h_threadinfo.start_ts, 
  h_threadinfo.thread_count, 
  h_threadinfo.working_set, 
  h_threadinfo.thread_level,

                                h_threadinfo.p_valid_from, 

                                h_threadinfo.p_valid_to, 

                                h_threadinfo.p_active_flag 

                              FROM 

                                ( 

                                  SELECT * 

                                  FROM palette.h_threadinfo 

                                  WHERE p_valid_to='21000101'::DATE::TIMESTAMP 

                                ) h_threadinfo 

                                FULL OUTER JOIN palette.s_threadinfo 

                                ON h_threadinfo.id=s_threadinfo.id 

                            ) t 

                            WHERE 

                              h_threadinfo.id=t.id AND 

                              h_threadinfo.p_valid_to='21000101'::DATE::TIMESTAMP AND 

                              ( 

                                t.sql_type='DELETE' OR 

                                (t.sql_type='UPDATE' AND is_equal LIKE '%N%') 

                              )
2016-09-13 13:27:16,258 - DEBUG - sql_routines - DWHtableInsertSCD - INSERT INTO palette.h_threadinfo 
" +
                                "( 
" +
                              "    host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level,
" +
                              "  p_active_flag,
" +
                              "  p_valid_from,
" +
                              "  p_valid_to
" +
                              ") 
" +
                              "SELECT 
" +
                              "    t.host_name, 
  t.process, 
  t.ts, 
  t.pid, 
  t.tid, 
  t.cpu_time, 
  t.poll_cycle_ts, 
  t.start_ts, 
  t.thread_count, 
  t.working_set, 
  t.thread_level,
" +
                              "  'Y'::VARCHAR(1) p_active_flag, 
" +
                              "   CASE WHEN t.sql_type='INSERT' THEN '10010101'::date::timestamp ELSE '2016-06-08 13:22:15'::TIMESTAMP END p_valid_from ,
" +
                              "  '21000101'::DATE::TIMESTAMP p_valid_to 
" +
                              "FROM 
" +
                              "( 
" +
                              "  SELECT 
" +
                              "    , 
" +
                              "    CASE 
" +
            "      WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END  || 
    CASE 
" +
            "      WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 
" +
            "      WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 
" +
            "      ELSE 'N' 
" +
            "    END '' is_equal, 
" +
                              "      s_threadinfo.host_name, 
  s_threadinfo.process, 
  s_threadinfo.ts, 
  s_threadinfo.pid, 
  s_threadinfo.tid, 
  s_threadinfo.cpu_time, 
  s_threadinfo.poll_cycle_ts, 
  s_threadinfo.start_ts, 
  s_threadinfo.thread_count, 
  s_threadinfo.working_set, 
  s_threadinfo.thread_level,
" +
                              "    h_threadinfo.p_valid_from, 
" +
                              "    h_threadinfo.p_valid_to, 
" +
                              "    h_threadinfo.p_active_flag 
" +
                              "  FROM 
" +
                              "    ( 
" +
                              "		select * from ( 
" +
                              "		  select * ,row_number() OVER (PARTITION BY " +pk+" ORDER BY p_valid_from DESC) as p_rn 
" +
                              "		  from palette.h_threadinfo ) tmp_h_threadinfo 
" +
                              "		  WHERE p_rn = 1 
" +

                              "    ) h_threadinfo 
" +
                              "    FULL OUTER JOIN palette.s_threadinfo 
" +
                              "    ON h_threadinfo.id=s_threadinfo.id 
" +
                              ") t 
" +
                              "WHERE 
" +
                              "  t.sql_type='INSERT' OR 
" +
                              "  (t.sql_type='UPDATE' AND is_equal LIKE '%N%')
2016-09-13 13:27:16,260 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 13:27:16,260 - DEBUG - database   - Database connection is closed
2016-09-13 13:27:32,343 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 13:27:32,343 - DEBUG - database   - Start creating database connection
2016-09-13 13:27:33,300 - DEBUG - database   - End creating database connection
2016-09-13 13:27:33,317 - DEBUG - sql_routines - pk: ['id']
2016-09-13 13:27:33,318 - DEBUG - sql_routines - pk_part: id
2016-09-13 13:27:33,318 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id AND 
2016-09-13 13:27:33,318 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id AND 
2016-09-13 13:27:33,318 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id
2016-09-13 13:27:33,319 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id
2016-09-13 13:27:33,319 - DEBUG - sql_routines - StageFullCreate - CREATE TABLE palette.s_threadinfo 
 ( 
   host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean
 ) 
2016-09-13 13:27:33,320 - DEBUG - sql_routines - DWHtableCreate - CREATE TABLE palette.h_threadinfo 

                        ( 

                          p_id serial,

                            host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean,

                          p_active_flag character varying(1),

                          p_valid_from timestamp without time zone,

                          p_valid_to timestamp without time zone 

                        )
                        WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 13:27:33,320 - DEBUG - sql_routines - DWHviewCreate - CREATE VIEW palette.threadinfo AS 

    							SELECT 

    							  host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level

    							FROM palette.h_threadinfo 

    							WHERE p_active_flag='Y' 
2016-09-13 13:27:33,320 - DEBUG - sql_routines - DWHtableUpdateSCD - UPDATE palette.h_threadinfo 

                            SET 

                              p_valid_to=('2016-06-08 13:22:15'::timestamp -INTERVAL '1' second)::TIMESTAMP, 

                              p_active_flag='N' 

                            FROM 

                            ( 

                              SELECT 

                                , 

                                CASE 

                  WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 

                  WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 

                  WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 

                  WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 

                  WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 

                  WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 

                  WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 

                  WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 

                  WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 

                  WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 

                  WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 

                  WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 

                  ELSE 'N' 

                END '' is_equal, 

                                  h_threadinfo.host_name, 
  h_threadinfo.process, 
  h_threadinfo.ts, 
  h_threadinfo.pid, 
  h_threadinfo.tid, 
  h_threadinfo.cpu_time, 
  h_threadinfo.poll_cycle_ts, 
  h_threadinfo.start_ts, 
  h_threadinfo.thread_count, 
  h_threadinfo.working_set, 
  h_threadinfo.thread_level,

                                h_threadinfo.p_valid_from, 

                                h_threadinfo.p_valid_to, 

                                h_threadinfo.p_active_flag 

                              FROM 

                                ( 

                                  SELECT * 

                                  FROM palette.h_threadinfo 

                                  WHERE p_valid_to='21000101'::DATE::TIMESTAMP 

                                ) h_threadinfo 

                                FULL OUTER JOIN palette.s_threadinfo 

                                ON h_threadinfo.id=s_threadinfo.id 

                            ) t 

                            WHERE 

                              h_threadinfo.id=t.id AND 

                              h_threadinfo.p_valid_to='21000101'::DATE::TIMESTAMP AND 

                              ( 

                                t.sql_type='DELETE' OR 

                                (t.sql_type='UPDATE' AND is_equal LIKE '%N%') 

                              )
2016-09-13 13:27:33,322 - DEBUG - sql_routines - DWHtableInsertSCD - INSERT INTO palette.h_threadinfo 
" +
                                "( 
" +
                              "    host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level,
" +
                              "  p_active_flag,
" +
                              "  p_valid_from,
" +
                              "  p_valid_to
" +
                              ") 
" +
                              "SELECT 
" +
                              "    t.host_name, 
  t.process, 
  t.ts, 
  t.pid, 
  t.tid, 
  t.cpu_time, 
  t.poll_cycle_ts, 
  t.start_ts, 
  t.thread_count, 
  t.working_set, 
  t.thread_level,
" +
                              "  'Y'::VARCHAR(1) p_active_flag, 
" +
                              "   CASE WHEN t.sql_type='INSERT' THEN '10010101'::date::timestamp ELSE '2016-06-08 13:22:15'::TIMESTAMP END p_valid_from ,
" +
                              "  '21000101'::DATE::TIMESTAMP p_valid_to 
" +
                              "FROM 
" +
                              "( 
" +
                              "  SELECT 
" +
                              "    , 
" +
                              "    CASE 

                  WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 

                  WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 

                  WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 

                  WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 

                  WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 

                  WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 

                  WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 

                  WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 

                  WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 

                  WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 

                  WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 

                  WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 

                  ELSE 'N' 

                END '' is_equal, 
" +
                              "      s_threadinfo.host_name, 
  s_threadinfo.process, 
  s_threadinfo.ts, 
  s_threadinfo.pid, 
  s_threadinfo.tid, 
  s_threadinfo.cpu_time, 
  s_threadinfo.poll_cycle_ts, 
  s_threadinfo.start_ts, 
  s_threadinfo.thread_count, 
  s_threadinfo.working_set, 
  s_threadinfo.thread_level,
" +
                              "    h_threadinfo.p_valid_from, 
" +
                              "    h_threadinfo.p_valid_to, 
" +
                              "    h_threadinfo.p_active_flag 
" +
                              "  FROM 
" +
                              "    ( 
" +
                              "		select * from ( 
" +
                              "		  select * ,row_number() OVER (PARTITION BY " +pk+" ORDER BY p_valid_from DESC) as p_rn 
" +
                              "		  from palette.h_threadinfo ) tmp_h_threadinfo 
" +
                              "		  WHERE p_rn = 1 
" +

                              "    ) h_threadinfo 
" +
                              "    FULL OUTER JOIN palette.s_threadinfo 
" +
                              "    ON h_threadinfo.id=s_threadinfo.id 
" +
                              ") t 
" +
                              "WHERE 
" +
                              "  t.sql_type='INSERT' OR 
" +
                              "  (t.sql_type='UPDATE' AND is_equal LIKE '%N%')
2016-09-13 13:27:33,324 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 13:27:33,324 - DEBUG - database   - Database connection is closed
2016-09-13 13:28:56,523 - INFO  - loadtables - Start Insight GP-Import.
2016-09-13 13:28:56,523 - DEBUG - database   - Start creating database connection
2016-09-13 13:28:57,441 - DEBUG - database   - End creating database connection
2016-09-13 13:28:57,450 - DEBUG - sql_routines - pk: ['id']
2016-09-13 13:28:57,450 - DEBUG - sql_routines - pk_part: id
2016-09-13 13:28:57,450 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id AND 
2016-09-13 13:28:57,450 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id AND 
2016-09-13 13:28:57,450 - DEBUG - sql_routines - strPK_JOIN_IN_ON: h_threadinfo.id=s_threadinfo.id
2016-09-13 13:28:57,450 - DEBUG - sql_routines - strPK_JOIN_IN_WHERE: h_threadinfo.id=t.id
2016-09-13 13:28:57,450 - DEBUG - sql_routines - StageFullCreate - CREATE TABLE palette.s_threadinfo 
 ( 
   host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean
 ) 
2016-09-13 13:28:57,451 - DEBUG - sql_routines - DWHtableCreate - CREATE TABLE palette.h_threadinfo 

                        ( 

                          p_id serial,

                            host_name text, 
  process text, 
  ts timestamp without time zone, 
  pid bigint, 
  tid bigint, 
  cpu_time bigint, 
  poll_cycle_ts timestamp without time zone, 
  start_ts timestamp without time zone, 
  thread_count integer, 
  working_set bigint, 
  thread_level boolean,

                          p_active_flag character varying(1),

                          p_valid_from timestamp without time zone,

                          p_valid_to timestamp without time zone 

                        )
                        WITH (appendonly=true, orientation=row, compresstype=quicklz)
2016-09-13 13:28:57,451 - DEBUG - sql_routines - DWHviewCreate - CREATE VIEW palette.threadinfo AS 

    							SELECT 

    							  host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level

    							FROM palette.h_threadinfo 

    							WHERE p_active_flag='Y' 
2016-09-13 13:28:57,451 - DEBUG - sql_routines - DWHtableUpdateSCD - UPDATE palette.h_threadinfo 

                            SET 

                              p_valid_to=('2016-06-08 13:22:15'::timestamp -INTERVAL '1' second)::TIMESTAMP, 

                              p_active_flag='N' 

                            FROM 

                            ( 

                              SELECT 

                                , 

                                CASE 

                  WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 

                  WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 

                  WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 

                  WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 

                  WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 

                  WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 

                  WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 

                  WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 

                  WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 

                  WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 

                  WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 

                  WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 

                  ELSE 'N' 

                END '' is_equal, 

                                  h_threadinfo.host_name, 
  h_threadinfo.process, 
  h_threadinfo.ts, 
  h_threadinfo.pid, 
  h_threadinfo.tid, 
  h_threadinfo.cpu_time, 
  h_threadinfo.poll_cycle_ts, 
  h_threadinfo.start_ts, 
  h_threadinfo.thread_count, 
  h_threadinfo.working_set, 
  h_threadinfo.thread_level,

                                h_threadinfo.p_valid_from, 

                                h_threadinfo.p_valid_to, 

                                h_threadinfo.p_active_flag 

                              FROM 

                                ( 

                                  SELECT * 

                                  FROM palette.h_threadinfo 

                                  WHERE p_valid_to='21000101'::DATE::TIMESTAMP 

                                ) h_threadinfo 

                                FULL OUTER JOIN palette.s_threadinfo 

                                ON h_threadinfo.id=s_threadinfo.id 

                            ) t 

                            WHERE 

                              h_threadinfo.id=t.id AND 

                              h_threadinfo.p_valid_to='21000101'::DATE::TIMESTAMP AND 

                              ( 

                                t.sql_type='DELETE' OR 

                                (t.sql_type='UPDATE' AND is_equal LIKE '%N%') 

                              )
2016-09-13 13:28:57,455 - DEBUG - sql_routines - DWHtableInsertSCD - INSERT INTO palette.h_threadinfo 

                                ( 

                                  host_name, 
  process, 
  ts, 
  pid, 
  tid, 
  cpu_time, 
  poll_cycle_ts, 
  start_ts, 
  thread_count, 
  working_set, 
  thread_level,

                                p_active_flag,

                                p_valid_from,

                                p_valid_to

                              ) 

                              SELECT 

                                  t.host_name, 
  t.process, 
  t.ts, 
  t.pid, 
  t.tid, 
  t.cpu_time, 
  t.poll_cycle_ts, 
  t.start_ts, 
  t.thread_count, 
  t.working_set, 
  t.thread_level,

                                'Y'::VARCHAR(1) p_active_flag, 

                                 CASE WHEN t.sql_type='INSERT' THEN '10010101'::date::timestamp ELSE '2016-06-08 13:22:15'::TIMESTAMP END p_valid_from ,

                                '21000101'::DATE::TIMESTAMP p_valid_to 

                              FROM 

                              ( 

                                SELECT 

                                  , 

                                  CASE 

                  WHEN s_threadinfo.host_name IS NULL AND h_threadinfo.host_name IS NULL THEN 'Y' 

                  WHEN s_threadinfo.host_name IS NOT NULL AND h_threadinfo.host_name IS NOT NULL AND s_threadinfo.host_name=h_threadinfo.host_name THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.process IS NULL AND h_threadinfo.process IS NULL THEN 'Y' 

                  WHEN s_threadinfo.process IS NOT NULL AND h_threadinfo.process IS NOT NULL AND s_threadinfo.process=h_threadinfo.process THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.ts IS NULL AND h_threadinfo.ts IS NULL THEN 'Y' 

                  WHEN s_threadinfo.ts IS NOT NULL AND h_threadinfo.ts IS NOT NULL AND s_threadinfo.ts=h_threadinfo.ts THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.pid IS NULL AND h_threadinfo.pid IS NULL THEN 'Y' 

                  WHEN s_threadinfo.pid IS NOT NULL AND h_threadinfo.pid IS NOT NULL AND s_threadinfo.pid=h_threadinfo.pid THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.tid IS NULL AND h_threadinfo.tid IS NULL THEN 'Y' 

                  WHEN s_threadinfo.tid IS NOT NULL AND h_threadinfo.tid IS NOT NULL AND s_threadinfo.tid=h_threadinfo.tid THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.cpu_time IS NULL AND h_threadinfo.cpu_time IS NULL THEN 'Y' 

                  WHEN s_threadinfo.cpu_time IS NOT NULL AND h_threadinfo.cpu_time IS NOT NULL AND s_threadinfo.cpu_time=h_threadinfo.cpu_time THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.poll_cycle_ts IS NULL AND h_threadinfo.poll_cycle_ts IS NULL THEN 'Y' 

                  WHEN s_threadinfo.poll_cycle_ts IS NOT NULL AND h_threadinfo.poll_cycle_ts IS NOT NULL AND s_threadinfo.poll_cycle_ts=h_threadinfo.poll_cycle_ts THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.start_ts IS NULL AND h_threadinfo.start_ts IS NULL THEN 'Y' 

                  WHEN s_threadinfo.start_ts IS NOT NULL AND h_threadinfo.start_ts IS NOT NULL AND s_threadinfo.start_ts=h_threadinfo.start_ts THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.thread_count IS NULL AND h_threadinfo.thread_count IS NULL THEN 'Y' 

                  WHEN s_threadinfo.thread_count IS NOT NULL AND h_threadinfo.thread_count IS NOT NULL AND s_threadinfo.thread_count=h_threadinfo.thread_count THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.working_set IS NULL AND h_threadinfo.working_set IS NULL THEN 'Y' 

                  WHEN s_threadinfo.working_set IS NOT NULL AND h_threadinfo.working_set IS NOT NULL AND s_threadinfo.working_set=h_threadinfo.working_set THEN 'Y' 

                  ELSE 'N' 

                END  || 
    CASE 

                  WHEN s_threadinfo.thread_level IS NULL AND h_threadinfo.thread_level IS NULL THEN 'Y' 

                  WHEN s_threadinfo.thread_level IS NOT NULL AND h_threadinfo.thread_level IS NOT NULL AND s_threadinfo.thread_level=h_threadinfo.thread_level THEN 'Y' 

                  ELSE 'N' 

                END '' is_equal, 

                                    s_threadinfo.host_name, 
  s_threadinfo.process, 
  s_threadinfo.ts, 
  s_threadinfo.pid, 
  s_threadinfo.tid, 
  s_threadinfo.cpu_time, 
  s_threadinfo.poll_cycle_ts, 
  s_threadinfo.start_ts, 
  s_threadinfo.thread_count, 
  s_threadinfo.working_set, 
  s_threadinfo.thread_level,

                                  h_threadinfo.p_valid_from, 

                                  h_threadinfo.p_valid_to, 

                                  h_threadinfo.p_active_flag 

                                FROM 

                                  ( 

                              		select * from ( 

                              		  select * ,row_number() OVER (PARTITION BY pk+" ORDER BY p_valid_from DESC) as p_rn 

                              		  from palette.h_threadinfo ) tmp_h_threadinfo 

                              		  WHERE p_rn = 1 


                                  ) h_threadinfo 

                                  FULL OUTER JOIN palette.s_threadinfo 

                                  ON h_threadinfo.id=s_threadinfo.id 

                              ) t 

                              WHERE 

                                t.sql_type='INSERT' OR 

                                (t.sql_type='UPDATE' AND is_equal LIKE '%N%')
2016-09-13 13:28:57,456 - INFO  - loadtables - End Insight GP-Import.
2016-09-13 13:28:57,456 - DEBUG - database   - Database connection is closed
